--
-- Tests for some likely failure cases with combo cmin/cmax mechanism
--
CREATE TEMP TABLE combocidtest (foobar int);
CREATE TABLE
BEGIN;
BEGIN
-- a few dummy ops to push up the CommandId counter
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest VALUES (1);
INSERT 0 1
INSERT INTO combocidtest VALUES (2);
INSERT 0 1
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
(2 rows)

SAVEPOINT s1;
SAVEPOINT
UPDATE combocidtest SET foobar = foobar + 10;
UPDATE 0
-- here we should see only updated tuples
SELECT * FROM combocidtest;
 foobar 
--------
     11
     12
(2 rows)

ROLLBACK TO s1;
ROLLBACK
-- now we should see old tuples, but with combo CIDs starting at 0
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
(2 rows)

COMMIT;
COMMIT
-- combo data is not there anymore, but should still see tuples
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
(2 rows)

-- Test combo cids with portals
BEGIN;
BEGIN
INSERT INTO combocidtest VALUES (333);
INSERT 0 1
ROLLBACK;
ROLLBACK
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
(2 rows)

-- check behavior with locked tuples
BEGIN;
BEGIN
-- a few dummy ops to push up the CommandId counter
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest SELECT 1 LIMIT 0;
INSERT 0 0
INSERT INTO combocidtest VALUES (444);
INSERT 0 1
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
    444
(3 rows)

SAVEPOINT s1;
SAVEPOINT
-- this doesn't affect cmin
SELECT * FROM combocidtest FOR UPDATE;
 foobar 
--------
      1
      2
    444
(3 rows)

SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
    444
(3 rows)

-- but this does
UPDATE combocidtest SET foobar = foobar + 10;
UPDATE 0
SELECT * FROM combocidtest;
 foobar 
--------
     11
     12
    454
(3 rows)

ROLLBACK TO s1;
ROLLBACK
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
    444
(3 rows)

COMMIT;
COMMIT
SELECT * FROM combocidtest;
 foobar 
--------
      1
      2
    444
(3 rows)

-- test for bug reported in
-- CABRT9RC81YUf1=jsmWopcKJEro=VoeG2ou6sPwyOUTx_qteRsg@mail.gmail.com
CREATE TABLE IF NOT EXISTS testcase(
	id int PRIMARY KEY,
	balance numeric
);
CREATE TABLE
INSERT INTO testcase VALUES (1, 0);
INSERT 0 1
BEGIN;
BEGIN
-- syntax error for kunlun: SELECT * FROM testcase WHERE testcase.id = 1 FOR UPDATE;
UPDATE testcase SET balance = balance + 400 WHERE id=1;
UPDATE 1
SAVEPOINT subxact;
SAVEPOINT
UPDATE testcase SET balance = balance - 100 WHERE id=1;
UPDATE 1
ROLLBACK TO SAVEPOINT subxact;
ROLLBACK
-- should return one tuple
-- syntax error for kunlun: SELECT * FROM testcase WHERE id = 1 FOR UPDATE;
ROLLBACK;
ROLLBACK
DROP TABLE testcase;
DROP TABLE
