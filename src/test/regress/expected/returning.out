--
-- Test INSERT/UPDATE/DELETE RETURNING
--
-- Simple cases
CREATE TEMP TABLE foo (f1 serial, f2 text, f3 int default 42);
CREATE TABLE
INSERT INTO foo (f2,f3)
  VALUES ('test', DEFAULT), ('More', 11), (upper('more'), 7+9)
  RETURNING *, f1+f3 AS sum;
 f1 |  f2  | f3 | sum 
----+------+----+-----
  1 | test | 42 |  43
  2 | More | 11 |  13
  3 | MORE | 16 |  19
(3 rows)

INSERT 0 3
SELECT * FROM foo;
 f1 |  f2  | f3 
----+------+----
  1 | test | 42
  2 | More | 11
  3 | MORE | 16
(3 rows)

SELECT * FROM foo;
 f1 |  f2  | f3 
----+------+----
  1 | test | 42
  2 | More | 11
  3 | MORE | 16
(3 rows)

DELETE FROM foo WHERE f1 > 2 RETURNING f3, f2, f1, least(f1,f3);
psql:sql/returning.sql:17: ERROR:  invalid attribute number 4
SELECT * FROM foo;
 f1 |  f2  | f3 
----+------+----
  1 | test | 42
  2 | More | 11
  3 | MORE | 16
(3 rows)

-- Subplans and initplans in the RETURNING list
INSERT INTO foo SELECT f1+10, f2, f3+99 FROM foo
  RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,
    EXISTS(SELECT * FROM int4_tbl) AS initplan;
psql:sql/returning.sql:25: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
 f1 |  f2  | f3  | subplan | initplan 
----+------+-----+---------+----------
 11 | test | 141 | t       | t
 12 | More | 110 | f       | t
 13 | MORE | 115 | f       | t
(3 rows)

INSERT 0 3
UPDATE foo SET f3 = f3 * 2
  WHERE f1 > 10
  RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,
    EXISTS(SELECT * FROM int4_tbl) AS initplan;
psql:sql/returning.sql:30: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
 f1 |  f2  | f3  | subplan | initplan 
----+------+-----+---------+----------
 11 | test | 282 | t       | t
 12 | More | 220 | f       | t
 13 | MORE | 230 | f       | t
(3 rows)

UPDATE 0
DELETE FROM foo
  WHERE f1 > 10
  RETURNING *, f1+112 IN (SELECT q1 FROM int8_tbl) AS subplan,
    EXISTS(SELECT * FROM int4_tbl) AS initplan;
psql:sql/returning.sql:35: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
 f1 |  f2  | f3  | subplan | initplan 
----+------+-----+---------+----------
 11 | test | 282 | t       | t
 12 | More | 220 | f       | t
 13 | MORE | 230 | f       | t
(3 rows)

DELETE 0
-- Joins
-- update involves two or more tables, not supported in kunlun currently.
--UPDATE foo SET f3 = f3*2
--  FROM int4_tbl i
--  WHERE foo.f1 + 123455 = i.f1
--  RETURNING foo.*, i.f1 as "i.f1";
SELECT * FROM foo;
 f1 |  f2  | f3 
----+------+----
  1 | test | 42
  2 | More | 11
  3 | MORE | 16
(3 rows)

-- delete involves two or more tables, not supported in kunlun currently.
--DELETE FROM foo
--  USING int4_tbl i
--  WHERE foo.f1 + 123455 = i.f1
--  RETURNING foo.*, i.f1 as "i.f1";
-- SELECT * FROM foo;
-- Check inheritance cases
CREATE TEMP TABLE foochild (fc int) INHERITS (foo);
CREATE TABLE
INSERT INTO foochild VALUES(123,'child',999,-123);
INSERT 0 1
ALTER TABLE foo ADD COLUMN f4 int8 DEFAULT 99;
ALTER TABLE
SELECT * FROM foo;
 f1  |  f2   | f3  | f4 
-----+-------+-----+----
   1 | test  |  42 | 99
   2 | More  |  11 | 99
   3 | MORE  |  16 | 99
 123 | child | 999 | 99
(4 rows)

SELECT * FROM foochild;
 f1  |  f2   | f3  |  fc  | f4 
-----+-------+-----+------+----
 123 | child | 999 | -123 | 99
(1 row)

UPDATE foo SET f4 = f4 + f3 WHERE f4 = 99 RETURNING *;
 f1  |  f2   | f3  |  f4  
-----+-------+-----+------
   1 | test  |  42 |  141
   2 | More  |  11 |  110
   3 | MORE  |  16 |  115
 123 | child | 999 | 1098
(4 rows)

UPDATE 0
SELECT * FROM foo;
 f1  |  f2   | f3  |  f4  
-----+-------+-----+------
   1 | test  |  42 |  141
   2 | More  |  11 |  110
   3 | MORE  |  16 |  115
 123 | child | 999 | 1098
(4 rows)

SELECT * FROM foochild;
 f1  |  f2   | f3  |  fc  |  f4  
-----+-------+-----+------+------
 123 | child | 999 | -123 | 1098
(1 row)

-- update involves two or more tables, not supported in kunlun currently.
--UPDATE foo SET f3 = f3*2
--FROM int8_tbl i
--  WHERE foo.f1 = i.q2
--  RETURNING *;
--
--SELECT * FROM foo;
--SELECT * FROM foochild;
-- delete involves two or more tables, not supported in kunlun currently.
--DELETE FROM foo
--  USING int8_tbl i
--  WHERE foo.f1 = i.q2
--  RETURNING *;
--
--SELECT * FROM foo;
--SELECT * FROM foochild;
DROP TABLE foochild;
DROP TABLE
-- Rules and views
CREATE TEMP VIEW voo AS SELECT f1, f2 FROM foo;
CREATE VIEW
INSERT INTO voo VALUES(11,'zit');
INSERT 0 1
-- fails:
INSERT INTO voo VALUES(12,'zoo') RETURNING *, f1*2;
 f1 | f2  | ?column? 
----+-----+----------
 12 | zoo |       24
(1 row)

INSERT 0 1
-- should still work
INSERT INTO voo VALUES(13,'zit2');
INSERT 0 1
-- works now
INSERT INTO voo VALUES(14,'zoo2') RETURNING *;
 f1 |  f2  
----+------
 14 | zoo2
(1 row)

INSERT 0 1
SELECT * FROM foo;
 f1 |  f2  | f3 | f4  
----+------+----+-----
  1 | test | 42 | 141
  2 | More | 11 | 110
  3 | MORE | 16 | 115
 11 | zit  | 42 |  99
 12 | zoo  | 42 |  99
 13 | zit2 | 42 |  99
 14 | zoo2 | 42 |  99
(7 rows)

SELECT * FROM voo;
 f1 |  f2  
----+------
  1 | test
  2 | More
  3 | MORE
 11 | zit
 12 | zoo
 13 | zit2
 14 | zoo2
(7 rows)

update voo set f1 = f1 + 1 where f2 = 'zoo2';
UPDATE 0
update voo set f1 = f1 + 1 where f2 = 'zoo2' RETURNING *, f1*2;
 f1 |  f2  | ?column? 
----+------+----------
 16 | zoo2 |       42
(1 row)

UPDATE 0
SELECT * FROM foo;
 f1 |  f2  | f3 | f4  
----+------+----+-----
  1 | test | 42 | 141
  2 | More | 11 | 110
  3 | MORE | 16 | 115
 11 | zit  | 42 |  99
 12 | zoo  | 42 |  99
 13 | zit2 | 42 |  99
 16 | zoo2 | 42 |  99
(7 rows)

SELECT * FROM voo;
 f1 |  f2  
----+------
  1 | test
  2 | More
  3 | MORE
 11 | zit
 12 | zoo
 13 | zit2
 16 | zoo2
(7 rows)

DELETE FROM foo WHERE f1 = 13;
DELETE 0
DELETE FROM foo WHERE f2 = 'zit' RETURNING *;
 f1 | f2  | f3 | f4 
----+-----+----+----
 11 | zit | 42 | 99
(1 row)

DELETE 0
SELECT * FROM foo;
 f1 |  f2  | f3 | f4  
----+------+----+-----
  1 | test | 42 | 141
  2 | More | 11 | 110
  3 | MORE | 16 | 115
 12 | zoo  | 42 |  99
 16 | zoo2 | 42 |  99
(5 rows)

SELECT * FROM voo;
 f1 |  f2  
----+------
  1 | test
  2 | More
  3 | MORE
 12 | zoo
 16 | zoo2
(5 rows)

-- Try a join case
CREATE TEMP TABLE joinme (f2j text, other int);
CREATE TABLE
INSERT INTO joinme VALUES('more', 12345);
INSERT 0 1
INSERT INTO joinme VALUES('zoo2', 54321);
INSERT 0 1
INSERT INTO joinme VALUES('other', 0);
INSERT 0 1
CREATE TEMP VIEW joinview AS
  SELECT foo.*, other FROM foo JOIN joinme ON (f2 = f2j);
CREATE VIEW
SELECT * FROM joinview;
 f1 |  f2  | f3 | f4 | other 
----+------+----+----+-------
 16 | zoo2 | 42 | 99 | 54321
(1 row)

UPDATE joinview SET f1 = f1 + 1 WHERE f3 = 57 RETURNING *, other + 1;
psql:sql/returning.sql:129: ERROR:  cannot update view "joinview"
DETAIL:  Views that do not select from a single table or view are not automatically updatable.
HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.
SELECT * FROM joinview;
 f1 |  f2  | f3 | f4 | other 
----+------+----+----+-------
 16 | zoo2 | 42 | 99 | 54321
(1 row)

SELECT * FROM foo;
 f1 |  f2  | f3 | f4  
----+------+----+-----
  1 | test | 42 | 141
  2 | More | 11 | 110
  3 | MORE | 16 | 115
 12 | zoo  | 42 |  99
 16 | zoo2 | 42 |  99
(5 rows)

SELECT * FROM voo;
 f1 |  f2  
----+------
  1 | test
  2 | More
  3 | MORE
 12 | zoo
 16 | zoo2
(5 rows)

-- Check aliased target relation
INSERT INTO foo AS bar DEFAULT VALUES RETURNING *; -- ok
 f1 | f2 | f3 | f4 
----+----+----+----
  4 |    | 42 | 99
(1 row)

INSERT 0 1
INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*; -- fails, wrong name
psql:sql/returning.sql:137: ERROR:  invalid reference to FROM-clause entry for table "foo"
LINE 1: INSERT INTO foo AS bar DEFAULT VALUES RETURNING foo.*;
                                                        ^
HINT:  Perhaps you meant to reference the table alias "bar".
INSERT INTO foo AS bar DEFAULT VALUES RETURNING bar.*; -- ok
 f1 | f2 | f3 | f4 
----+----+----+----
  5 |    | 42 | 99
(1 row)

INSERT 0 1
INSERT INTO foo AS bar DEFAULT VALUES RETURNING bar.f3; -- ok
 f3 
----
 42
(1 row)

INSERT 0 1
