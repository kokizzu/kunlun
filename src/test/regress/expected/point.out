--
-- POINT
--
-- Test that GiST indexes provide same behavior as sequential scan
CREATE TEMP TABLE point_gist_tbl(f1 point);
CREATE TABLE
INSERT INTO point_gist_tbl SELECT '(0,0)' FROM generate_series(0,1000);
INSERT 0 1001
CREATE INDEX point_gist_tbl_index ON point_gist_tbl USING gist (f1);
CREATE INDEX
INSERT INTO point_gist_tbl VALUES ('(0.0000009,0.0000009)');
INSERT 0 1
SET enable_seqscan TO true;
SET
SET enable_indexscan TO false;
SET
SET enable_bitmapscan TO false;
SET
SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000009,0.0000009)'::point;
 count 
-------
  1002
(1 row)

SELECT COUNT(*) FROM point_gist_tbl WHERE f1 <@ '(0.0000009,0.0000009),(0.0000009,0.0000009)'::box;
 count 
-------
     1
(1 row)

SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000018,0.0000018)'::point;
 count 
-------
     1
(1 row)

SET enable_seqscan TO false;
SET
SET enable_indexscan TO true;
SET
SET enable_bitmapscan TO true;
SET
SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000009,0.0000009)'::point;
 count 
-------
  1002
(1 row)

SELECT COUNT(*) FROM point_gist_tbl WHERE f1 <@ '(0.0000009,0.0000009),(0.0000009,0.0000009)'::box;
 count 
-------
     1
(1 row)

SELECT COUNT(*) FROM point_gist_tbl WHERE f1 ~= '(0.0000018,0.0000018)'::point;
 count 
-------
     1
(1 row)

RESET enable_seqscan;
RESET
RESET enable_indexscan;
RESET
RESET enable_bitmapscan;
RESET
DROP TABLE point_gist_tbl;
DROP TABLE
