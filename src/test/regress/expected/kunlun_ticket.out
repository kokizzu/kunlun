drop table if exists tenk1;
DROP TABLE
 CREATE TABLE tenk1 (
 unique1  int4,
 unique2  int4,
 two   int4,
 four  int4,
 ten   int4,
 twenty  int4,
 hundred  int4,
 thousand int4,
 twothousand int4,
 fivethous int4,
 tenthous int4,
 odd   int4,
 even  int4,
 stringu1 name,
 stringu2 name,
 string4  name
);
CREATE TABLE
COPY tenk1 FROM '/home/kunlun/pgregressdata/data/tenk.data';
COPY 10000
select count(*) from tenk1;
 count 
-------
 10000
(1 row)

drop table if exists FLOAT8_TBL;
DROP TABLE
CREATE TABLE FLOAT8_TBL(f1 float8);
CREATE TABLE
INSERT INTO FLOAT8_TBL(f1) VALUES ('    0.0   ');
INSERT 0 1
INSERT INTO FLOAT8_TBL(f1) VALUES ('1004.30  ');
INSERT 0 1
INSERT INTO FLOAT8_TBL(f1) VALUES ('   -34.84');
INSERT 0 1
INSERT INTO FLOAT8_TBL(f1) VALUES ('1.2345678901234e+200');
INSERT 0 1
INSERT INTO FLOAT8_TBL(f1) VALUES ('1.2345678901234e-200');
INSERT 0 1
drop table if exists INT4_TBL;
DROP TABLE
CREATE TABLE INT4_TBL(f1 int4);
CREATE TABLE
INSERT INTO INT4_TBL(f1) VALUES ('   0  ');
INSERT 0 1
INSERT INTO INT4_TBL(f1) VALUES ('123456     ');
INSERT 0 1
INSERT INTO INT4_TBL(f1) VALUES ('    -123456');
INSERT 0 1
INSERT INTO INT4_TBL(f1) VALUES ('34.5');
psql:sql/kunlun_ticket.sql:37: ERROR:  invalid input syntax for integer: "34.5"
LINE 1: INSERT INTO INT4_TBL(f1) VALUES ('34.5');
                                         ^
drop table if exists INT8_TBL cascade;
psql:sql/kunlun_ticket.sql:40: NOTICE:  drop cascades to view tt18v
DROP TABLE
CREATE TABLE INT8_TBL(q1 int8, q2 int8);
CREATE TABLE
INSERT INTO INT8_TBL VALUES('  123   ','  456');
INSERT 0 1
INSERT INTO INT8_TBL VALUES('123   ','4567890123456789');
INSERT 0 1
INSERT INTO INT8_TBL VALUES('4567890123456789','123');
INSERT 0 1
INSERT INTO INT8_TBL VALUES(+4567890123456789,'4567890123456789');
INSERT 0 1
INSERT INTO INT8_TBL VALUES('+4567890123456789','-4567890123456789');
INSERT 0 1
-- ticket:946
show create table tenk1;
 Table |     Create Table      
-------+-----------------------
 tenk1 | CREATE TABLE tenk1 ( +
       |  unique1 integer,    +
       |  unique2 integer,    +
       |  two integer,        +
       |  four integer,       +
       |  ten integer,        +
       |  twenty integer,     +
       |  hundred integer,    +
       |  thousand integer,   +
       |  twothousand integer,+
       |  fivethous integer,  +
       |  tenthous integer,   +
       |  odd integer,        +
       |  even integer,       +
       |  stringu1 name,      +
       |  stringu2 name,      +
       |  string4 name        +
       | ) WITH (shard=1'1')
(1 row)

update pg_class set reltuples=10000 where relname = 'tenk1';
UPDATE 1
 explain select count(*)
from
  (select t3.tenthous as x1, coalesce(t1.stringu1, t2.stringu1) as x2
   from tenk1 t1
   left join tenk1 t2 on t1.unique1 = t2.unique1
   join tenk1 t3 on t1.unique2 = t3.unique2) ss,
  tenk1 t4,
  tenk1 t5
where t4.thousand = t5.unique1 and ss.x1 = t4.tenthous and ss.x2 = t5.stringu1;

--ticket:291
select f1, (select min(unique1) from tenk1 where unique1 > f1) AS gt from int4_tbl;
   f1    | gt 
---------+----
       0 |  1
  123456 |   
 -123456 |  0
(3 rows)

--ticket:882
drop table if exists t2;
DROP TABLE
CREATE TABLE t2 (
    a integer AUTO_INCREMENT
);
CREATE TABLE
INSERT INTO t2 VALUES (NULL);
INSERT 0 1
-- ticket:842
drop table if exists t2;
DROP TABLE
create  table t2(a int );	
CREATE TABLE
create index on t2(a);
CREATE INDEX
drop index t2_a_idx; create index on t2(a);
DROP INDEX
CREATE INDEX
 \d+ t2;
                                    Table "public.t2"
 Column |  Type   | Collation | Nullable | Default | Storage | Stats target | Description 
--------+---------+-----------+----------+---------+---------+--------------+-------------
 a      | integer |           |          |         | plain   |              | 
Indexes:
    "t2_a_idx" btree (a NULLS FIRST)
Options: shard=1

 
 
-- ticket:826
drop table if exists t1; 
psql:sql/kunlun_ticket.sql:84: NOTICE:  table "t1" does not exist, skipping
DROP TABLE
create table t1(a int, b int, c int, d int);
CREATE TABLE
create index on t1(a);
CREATE INDEX
insert into t1 select generate_series(1,1000);
INSERT 0 1000
analyze t1;
ANALYZE
explain select * from t1 where t1.a=1;

drop index t1_a_idx;
DROP INDEX
explain select * from t1 where t1.a=1;

-- ticket:908 单shard不做测试
-- drop table if exists t1,t2; 
-- create table t1(a int, b int) with(shard=1);
-- create table t2(a int, b int) with(shard=1);
-- create index on t1(a);
-- create index on t2(a);
-- 准备数据
-- insert into t1 select  random()*100, generate_series(1,100) % 10;
-- insert into t2 select generate_series(1,100), random()*100;
-- analyze t1, t2;
-- 禁止hash/merge join，以及物化优化
-- set enable_hashjoin =off;
-- set enable_mergejoin =off;
-- set enable_material =off;
-- 产生NestLoop JOIN执行计划
-- explain select * from t1, t2 where t1.b=t2.a and t1.a < 40;
-- ticket:881
select 'CREATE USER MAPPING FOR \"current_user\" SERVER sv2 OPTIONS (user ''\"current_user\"'')';
                                       ?column?                                        
---------------------------------------------------------------------------------------
 CREATE USER MAPPING FOR \"current_user\" SERVER sv2 OPTIONS (user '\"current_user\"')
(1 row)

--ticket:900
drop table if exists t; 
DROP TABLE
create table t(a int auto_increment);
CREATE TABLE
insert into t values(default), (default);
INSERT 0 2
drop table t;
DROP TABLE
--ticket:895
drop table if exists t1; 
DROP TABLE
create table t1(a int, b varchar(10));
CREATE TABLE
insert into t1 select 1, ' 01';
INSERT 0 1
select a::text::float =b::float from t1;
 ?column? 
----------
 t
(1 row)

drop table t1;
DROP TABLE
-- ticket:887
drop table if exists t1; 
psql:sql/kunlun_ticket.sql:133: NOTICE:  table "t1" does not exist, skipping
DROP TABLE
create table t1(a int, b int);
CREATE TABLE
insert into t1 values(1,0),(2,0),(3,0),(4,0),(5,0);
INSERT 0 5
WITH t AS (UPDATE t1 SET b=b+1 limit 4 returning *)
SELECT *
FROM t limit 1;
 a | b 
---+---
 1 | 1
(1 row)

select * from t1;
 a | b 
---+---
 1 | 1
 2 | 1
 3 | 1
 4 | 1
 5 | 0
(5 rows)

--ticket:332
CREATE SEQUENCE sequence_test2 START WITH 32; 	
psql:sql/kunlun_ticket.sql:147: ERROR:  relation "sequence_test2" already exists
ALTER SEQUENCE IF EXISTS sequence_test2 RESTART WITH 24
  INCREMENT BY 4 MAXVALUE 36 MINVALUE 5 CYCLE;
ALTER SEQUENCE
SELECT nextval('sequence_test2');
 nextval 
---------
      24
(1 row)

--ticket:897
drop database abc;
psql:sql/kunlun_ticket.sql:156: ERROR:  database "abc" does not exist
create database abc；
create database if not exists abc;
psql:sql/kunlun_ticket.sql:158: ERROR:  syntax error at or near "create"
LINE 2: create database if not exists abc;
        ^
--ticket:898
SHOW DATABASES;
 Database  
-----------
 testdb1
 template1
 template0
 regress
 postgres
(5 rows)

SHOW SCHEMAS;
      Schemas       
--------------------
 pg_toast
 pg_temp_1
 pg_toast_temp_1
 pg_catalog
 public
 information_schema
 pg_temp_9
 pg_toast_temp_9
 pg_temp_11
 pg_toast_temp_11
 pg_temp_12
 pg_toast_temp_12
(12 rows)

SHOW TABLES;
               Tables                
-------------------------------------
 complex
 a
 aggtype
 a_star
 at_base_table
 b
 pagg_tab2_p3
 quad
 parted_conflict
 btree_tall_tbl
 clstr_tst
 clstr_tst_inh
 hobbies_r
 plt1_e_p1
 tfail
 alter_table_under_transition_tables
 my_credit_card_normal
 join_foo
 cantcompare
 mlparted
 my_property_secure
 my_credit_card_secure
 my_credit_card_usage_normal
 my_credit_card_usage_secure
 my_property_normal
 aggtest
 key_dependent_view
 toyemp
 at_partitioned_1
 key_dependent_view_no_cols
 at_partitioned
 jpop
 jpop2
 hslot
 hub
 mlparted11
 plt1_e_p3
 prt1_m_p1
 prt1_p2
 parted_conflict_1
 check_con_tbl
 donothingbrtrig_test1
 donothingbrtrig_test2
 t2
 ec0
 partitioned_table
 float8_tbl
 int4_tbl
 int8_tbl
 tenk1
 t1
 gstest1
 iface
 inhe
 nums
 returningwrtest
 pagg_tab1_p3
 pc_list_parted
 pfield_v1
 sums_1_100
 pagg_tab_m_p1
 record_type
 rngfunc_rescan_t
 pagg_tab_m_p2
 pc_list_part_1
 concur_heap
 prt1_m
 person_type
 insertconflicttest1
 pagg_tab_ml_p2_s1
 int2_tbl
 prt2_m
 pagg_tab_ml_p2_s2
 pagg_tab2_p1
 pagg_tab2_p2
 plt1
 pagg_tab_ml_p1
 t30
 itest1
 pagg_tab_p1
 plt2
 pagg_tab_p2
 pagg_tab_p3
 plt1_e
 prt1_l
 hash_txt_heap
 pagg_tab_para_p2
 pagg_tab_para_p3
 pht1
 pht1_e
 pht2
 prt1_l_p2
 like_op_noprune2
 pagg_tab_m_p3
 part_attmp1
 part_p1
 pagg_tab
 prt1_l_p3
 prt2_l
 mvtest_t
 no_oids
 onek
 prt2_l_p2
 prt2_l_p3
 parted_conflict_1_1
 bigger_than_it_looks
 dept
 pc_list_part_null
 persons
 boolvalues
 brintest
 bt_f8_heap
 bt_i4_heap
 bt_name_heap
 bt_txt_heap
 char_tbl
 customer
 default_tbl
 defaultexpr_tbl
 pht1_e_p1
 extremely_skewed
 hash_f8_heap
 inhf
 join_bar
 pht1_e_p3
 t3
 pagg_tab_ml_p3_s2
 pagg_tab_para_p1
 pht1_p1
 prt1_n
 prt2_n
 pht2_p1
 pht1_p2
 pht1_p3
 prt3_n
 pht2_p2
 pht2_p3
 pline
 plt1_e_p2
 t302
 plt1_p1
 prt4_n
 like_op_noprune
 plt1_p2
 plt1_p3
 plt2_p1
 plt2_p2
 plt2_p3
 prt1_l_p1
 prt1_l_p2_p1
 part
 prt1_l_p3_p1
 prt1_l_p3_p2
 prt1_m_p2
 prt1_m_p3
 prt1_n_p1
 prt1_n_p2
 pagg_tab_ml
 pagg_tab_ml_p2
 prt3_n_p3
 prt4_n_p1
 pagg_tab_para
 pagg_tab_ml_p3
 prt2_l_p1
 prt2_l_p3_p1
 prt2_l_p3_p2
 clstr_tst_s
 comment_test
 prt2_m_p1
 text_tbl
 transition_table_base
 transition_table_level1
 prt2_m_p2
 prt2_m_p3
 t10
 t120
 at_view_1
 at_view_2
 t12
 pagg_tab_m
 credit_card
 prt2_n_p2
 prt3_n_p1
 t13
 prt4_n_p2
 prt4_n_p3
 r2
 stuffs
 system
 t121
 t122
 t123
 t14
 t301
 t303
 t304
 tas_case
 test1
 transition_table_level2
 transition_table_status
 trunc_stats_test1
 tvehicles
 tx1
 varchar_tbl
 view_base_table
 wide
 wslot
 base_tbl
 prt1_p1
 prt1_p3
 prt1
 subselect_tbl
 uv_iocu_tab
 rw_view1
 uv_iocu_view
 deptest1
 emp
 itest13
 pfield
 phone
 prt2_p1
 prt2_p3
 prt2_p2
 prt2
 credit_usage
 itest6
 part_2
 r1
 update_test
 collate_test1
 collate_test10
 collate_test2
 equipment_r
 hash_i4_heap
 hash_name_heap
 indext1
 prt3_n_p2
 pt_part1
 pht1_e_p2
 prt1_l_p2_p2
 float4_tbl
 prt2_l_p2_p1
 tt
 tt1
 tt2
 tt3
 tt4
 pt_part2
 itest7
 random_tbl
 itest9
 rc_test
 returningwrtest1
 revalidate_bug
 rngfunc2
 room
 simple
 stud_emp
 student
 pslot
 tenk2
 test_missing_target
 testjsonb
 testu1
 timestamp_tbl
 timestamptz_tbl
 mlparted1
 anothertab
 like_op_noprune1
 part_1
 test_default_tab
 moneyp
 part_attmp
 list_parted
 pagg_tab1_p1
 pagg_tab1_p2
 pagg_tab1
 pagg_tab2
 prt1_e_p1
 prt1_e_p2
 prt1_e_p3
 prt1_e
 prt2_e
 prt2_e_p1
 prt2_e_p2
 prt2_e_p3
 atest5
 ctv_data
 few
 v_test1
 prt2_l_p2_p2
 prt2_n_p1
 xacttest
(293 rows)

SHOW TABLES like 't1';
 Tables 
--------
 t1
(1 row)

show create table t1;
 Table |    Create Table    
-------+--------------------
 t1    | CREATE TABLE t1 ( +
       |  a integer,       +
       |  b integer        +
       | ) WITH (shard=1'1')
(1 row)

SHOW PROCESSLIST;
   Pid   |  User   |        Host         |    db    | State  |       Query       | Wait_event | xact_sec | query_sec | backend_sec | state_change 
---------+---------+---------------------+----------+--------+-------------------+------------+----------+-----------+-------------+--------------
 4195212 | abc     | 192.168.0.113:38786 | postgres | idle   |                   | ClientRead |          | 13.769024 | 13.774111   | 13.76866
 4194313 | jenkins | unix socket         | postgres | idle   |                   | ClientRead |          | 0.020692  | 3736.978438 | 0.02015
 4195213 | abc     | 192.168.0.113:38798 | regress  | active | SHOW PROCESSLIST; |            | 0.000976 | 0.000976  | 9.567688    | 0.000976
 4194361 | jenkins | unix socket         | regress  | idle   |                   | ClientRead |          | 0.743434  | 3717.420233 | 0.74291
(4 rows)

show errors;
 Level | Code | Message 
-------+------+---------
(0 rows)

show warnings;
 Level | Code | Message 
-------+------+---------
(0 rows)

drop table if exists t6;
psql:sql/kunlun_ticket.sql:172: NOTICE:  table "t6" does not exist, skipping
DROP TABLE
create temp table t6(a int primary key, b int unique);
CREATE TABLE
replace into t6 values(1,1),(2,2);
INSERT 0 2
--替换之前的数据
replace into t6 values(1,3),(2,6); 
INSERT 0 4
drop table t6;
DROP TABLE
--ticket:827
drop table if exists t1,t2,t3;
DROP TABLE
create table t1(a int);
CREATE TABLE
create table t2(a int);
CREATE TABLE
create table t3(a int, b int);
CREATE TABLE
insert into t1 values (1),(2);
INSERT 0 2
insert into t2 values (3),(4);
INSERT 0 2
insert into t3 values (1,1);
INSERT 0 1
update t3 set (a,b) = ((select max(a) from t1), (select max(a) from t2));
UPDATE 1
drop table t1,t2,t3;
DROP TABLE
--ticket:574
drop table if exists t1;
psql:sql/kunlun_ticket.sql:193: NOTICE:  table "t1" does not exist, skipping
DROP TABLE
create table t1 (a int PRIMARY KEY , b int not null,CONSTRAINT t1_b_key UNIQUE (b));
CREATE TABLE
-- 违背唯一约束，不进行插入
insert ignore into t1(a,b) values (4,4);
INSERT 0 1
	
insert ignore into t1(a,b) values (4,4);
INSERT 0 0
insert into t1(a,b) values (3,3);
INSERT 0 1
-- 等价的PG语法
insert into t1 values(3,3) on conflict do nothing;
INSERT 0 0
-- 不忽略违背约束的错误（例如分区约束、非null约束）
insert ignore into t1(a,b) values (4,NULL); --error
psql:sql/kunlun_ticket.sql:207: ERROR:  null value in column "b" violates not-null constraint
DETAIL:  Failing row contains (4, null).
-- insert on duplicate key update
-- 更新第一个冲突的元组
select * from t1;
 a | b 
---+---
 3 | 3
 4 | 4
(2 rows)

insert into t1 values(3,4) on duplicate key update b=2;
INSERT 0 2
select * from t1;
 a | b 
---+---
 3 | 2
 4 | 4
(2 rows)

-- 等价的PG语法
insert into t1 values(3,3) on conflict do update set b=3;
INSERT 0 2
--ticket:575
select * from t1;
 a | b 
---+---
 3 | 3
 4 | 4
(2 rows)

replace into t1 values(3,4);
INSERT 0 3
replace into t1 values(1,1),(1,2);
INSERT 0 3
select * from t1;
 a | b 
---+---
 1 | 2
 3 | 4
(2 rows)

create temp table t1(a int primary key, b int unique);
CREATE TABLE
replace into t1 values(1,1),(1,2);
psql:sql/kunlun_ticket.sql:226: ERROR:  REPLACE INTO command cannot affect row a second time
HINT:  Ensure that no rows proposed for insertion within the same command have duplicate constrained values.
drop table t1;
DROP TABLE
--ticket:581
drop table if exists t3 cascade;
psql:sql/kunlun_ticket.sql:231: NOTICE:  table "t3" does not exist, skipping
DROP TABLE
CREATE TABLE t3 (A INT PRIMARY KEY, B INT) PARTITION BY RANGE(a);
CREATE TABLE
CREATE TABLE t3p1 PARTITION OF t3 FOR VALUES FROM (0) TO (100);
CREATE TABLE
CREATE TABLE t3p2 PARTITION OF t3 FOR VALUES FROM (100) TO (200);
CREATE TABLE
REPLACE INTO t3 SELECT GENERATE_SERIES(0,400) % 200, GENERATE_SERIES(0,400);
INSERT 0 602
-- 分区表暂不支持全局有序的删除
UPDATE t3 SET b=-b ORDER BY a LIMIT 1; -- should be fail, global order is not supported
UPDATE 1
-- 支持不跨越分区的有序删除
UPDATE t3 SET b=-b WHERE a<100 ORDER BY a LIMIT 1 RETURNING *;
 a |  b  
---+-----
 0 | 400
(1 row)

UPDATE 1
WITH foo as (UPDATE t3 SET b=-b WHERE b > 0 LIMIT 10 RETURNING *) SELECT count(1) FROM foo;
 count 
-------
    10
(1 row)

SELECT count(1) FROM t3 where b<0;
 count 
-------
    10
(1 row)

drop table t3;
DROP TABLE
--ticket:936
drop FUNCTION if exists f_leak;
DROP FUNCTION
select length(stringu1) from tenk1 group by length(stringu1);
 length 
--------
      6
(1 row)

CREATE FUNCTION f_leak (text)
       RETURNS bool LANGUAGE 'plpgsql' COST 0.0000001
       AS 'BEGIN RAISE NOTICE ''f_leak => %'', $1; RETURN true; END';
CREATE FUNCTION
	   
drop table if exists customer cascade;   
psql:sql/kunlun_ticket.sql:254: NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to view my_property_normal
drop cascades to view my_property_secure
drop cascades to view my_credit_card_normal
drop cascades to view my_credit_card_secure
drop cascades to view my_credit_card_usage_normal
drop cascades to view my_credit_card_usage_secure
DROP TABLE
CREATE TABLE customer (
       cid      int primary key,
       name     text not null,
       tel      text,
       passwd   text);
CREATE TABLE
CREATE VIEW my_property_normal AS
       SELECT * FROM customer WHERE name = current_user;
CREATE VIEW
	   
GRANT SELECT ON my_property_normal TO public;
GRANT
SELECT * FROM my_property_normal WHERE f_leak(passwd);
 cid | name | tel | passwd 
-----+------+-----+--------
(0 rows)

drop table customer cascade;
psql:sql/kunlun_ticket.sql:267: NOTICE:  drop cascades to view my_property_normal
DROP TABLE
drop FUNCTION f_leak;
DROP FUNCTION
--ticket:920
drop sequence if exists s1;
psql:sql/kunlun_ticket.sql:271: NOTICE:  sequence "s1" does not exist, skipping
DROP SEQUENCE
create sequence s1;
CREATE SEQUENCE
select * from s1;
 last_value | log_cnt | is_called 
------------+---------+-----------
          1 |       0 | f
(1 row)

drop sequence s1;
DROP SEQUENCE
--ticket:932
drop table if exists temptest2 cascade;
psql:sql/kunlun_ticket.sql:277: NOTICE:  table "temptest2" does not exist, skipping
DROP TABLE
begin;
BEGIN
CREATE TEMP TABLE temptest2(col int PRIMARY KEY) ON COMMIT DELETE ROWS;
CREATE TABLE
insert into temptest2 values (1),(2);
INSERT 0 2
select*from temptest2;
 col 
-----
   1
   2
(2 rows)

commit;
COMMIT
drop table temptest2;
DROP TABLE
-- ticket:109
drop table if exists tf1;
psql:sql/kunlun_ticket.sql:286: NOTICE:  table "tf1" does not exist, skipping
DROP TABLE
create table tf1(v float8);
CREATE TABLE
insert into tf1 values(34.84);
INSERT 0 1
select int4(v) from tf1;
 int4 
------
   35
(1 row)

drop table tf1;
DROP TABLE
-- ticket:93
select q1 | q2 from int8_tbl;
     ?column?     
------------------
              507
 4567890123456895
 4567890123456895
 4567890123456789
               -1
(5 rows)

select q1 -- q2 from int8_tbl;
select ~q1 from int8_tbl;
psql:sql/kunlun_ticket.sql:296: ERROR:  syntax error at or near "select"
LINE 2: select ~q1 from int8_tbl;
        ^
select ~q2 from int8_tbl;
     ?column?      
-------------------
              -457
 -4567890123456790
              -124
 -4567890123456790
  4567890123456788
(5 rows)

-- ticket:12
drop table if exists attmp;
psql:sql/kunlun_ticket.sql:301: NOTICE:  table "attmp" does not exist, skipping
DROP TABLE
CREATE TABLE attmp (initial int4);
CREATE TABLE
ALTER TABLE attmp ADD COLUMN a int4 default 3;
ALTER TABLE
ALTER TABLE attmp ADD COLUMN b name;
ALTER TABLE
ALTER TABLE attmp ADD COLUMN c text;
ALTER TABLE
ALTER TABLE attmp ADD COLUMN d float8;
ALTER TABLE
ALTER TABLE attmp ADD COLUMN e float4;
ALTER TABLE
CREATE INDEX attmp_idx ON attmp (a, (d + e), b);
CREATE INDEX
drop table attmp;
DROP TABLE
-- ticket:82
drop table if exists bytea_test_table;
psql:sql/kunlun_ticket.sql:316: NOTICE:  table "bytea_test_table" does not exist, skipping
DROP TABLE
create table bytea_test_table(v bytea);
CREATE TABLE
insert into bytea_test_table values(decode('ff','hex'));
INSERT 0 1
select string_agg(v,'') from bytea_test_table;
 string_agg 
------------
 \xff
(1 row)

drop table bytea_test_table;
DROP TABLE
-- ticket:130
drop table if exists list_parted cascade;
DROP TABLE
create table list_parted ( a text, b int) partition by list (lower(a));
CREATE TABLE
create table part_ee_ff partition of list_parted for values in ('ee', 'ff') partition by range (b);
CREATE TABLE
drop table list_parted;
DROP TABLE
-- ticket:49
drop table if exists ts1;
psql:sql/kunlun_ticket.sql:334: NOTICE:  table "ts1" does not exist, skipping
DROP TABLE
create table ts1(id int, info text);
CREATE TABLE
select * from ts1 for share;
 id | info 
----+------
(0 rows)

drop table ts1;
DROP TABLE
drop table if exists INT8_TBL cascade;
DROP TABLE
CREATE TABLE INT8_TBL(q1 int8, q2 int8);
CREATE TABLE
create function extractq2(t int8_tbl) returns int8 as $$
select t.q2
$$ language sql immutable;
CREATE FUNCTION
create function extractq2_2(t int8_tbl) returns table(ret1 int8) as $$
select extractq2(t) offset 0
$$ language sql immutable;
CREATE FUNCTION
select x from int8_tbl, extractq2_2(int8_tbl) f(x);
 x 
---
(0 rows)

--ticket:120
DROP SEQUENCE IF EXISTS sequence_test;
psql:sql/kunlun_ticket.sql:352: NOTICE:  sequence "sequence_test" does not exist, skipping
DROP SEQUENCE
CREATE SEQUENCE sequence_test;
CREATE SEQUENCE
SELECT setval('sequence_test'::text, 99, false); -- this returns 99
 setval 
--------
     99
(1 row)

SELECT nextval('sequence_test'::text); -- this should returns 99, but it returns 100
 nextval 
---------
      99
(1 row)

DROP SEQUENCE sequence_test;
DROP SEQUENCE
--ticket:332
drop sequence  IF EXISTS sequence_test2;
DROP SEQUENCE
CREATE SEQUENCE sequence_test2 START WITH 32; 	
CREATE SEQUENCE
ALTER SEQUENCE IF EXISTS sequence_test2 RESTART WITH 24
  INCREMENT BY 4 MAXVALUE 36 MINVALUE 5 CYCLE;
ALTER SEQUENCE
SELECT nextval('sequence_test2'); -- this returns 24
 nextval 
---------
      24
(1 row)

ALTER SEQUENCE sequence_test2 RESTART WITH 32
NO CYCLE;
ALTER SEQUENCE
SELECT nextval('sequence_test2');
 nextval 
---------
      32
(1 row)

SELECT nextval('sequence_test2');
 nextval 
---------
      36
(1 row)

SELECT nextval('sequence_test2'); -- error
psql:sql/kunlun_ticket.sql:375: ERROR:  Kunlun-db: nextval(): exhausted all values of sequence "sequence_test2" 
drop sequence sequence_test2;
DROP SEQUENCE
--ticket:914
set enable_mergejoin = off, enable_hashjoin = off;
SET
SET SESSION NET_READ_TIMEOUT= 86400, @@SESSION.NET_WRITE_TIMEOUT= 86400;
SET
SET SESSION NET_READ_TIMEOUT= 86400, @@SESSION.NET_WRITE_TIMEOUT= 86400, enable_hashjoin = off;
SET
--ticket:905 
CREATE DATABASE dbname TEMPLATE template0;
CREATE DATABASE
--ticket:901
drop table if exists t1;
DROP TABLE
create table t1(a int, b int);
CREATE TABLE
    
begin;
BEGIN
insert into t1 values(1,1);
INSERT 0 1
savepoint s1;
SAVEPOINT
insert into t1 values(2,2);
INSERT 0 1
insert into t1 values(2,2);
INSERT 0 1
commit;
COMMIT
drop table tenk1;
DROP TABLE
drop table FLOAT8_TBL;
DROP TABLE
drop table INT4_TBL;
DROP TABLE
drop table INT8_TBL cascade;
psql:sql/kunlun_ticket.sql:413: NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to function extractq2(int8_tbl)
drop cascades to function extractq2_2(int8_tbl)
DROP TABLE
