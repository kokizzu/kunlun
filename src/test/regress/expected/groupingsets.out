--
-- grouping sets
--
-- test data sources
drop view if exists gstest1;
psql:sql/groupingsets.sql:7: NOTICE:  view "gstest1" does not exist, skipping
DROP VIEW
-- ERROR:  Kunlun-db: Statement 'CREATE VIEW' not support temporary object mixied normal object, so we change the view from temp to non-temp
create view gstest1(a,b,v)
  as values (1,1,10),(1,1,11),(1,2,12),(1,2,13),(1,3,14),
            (2,3,15),
            (3,3,16),(3,4,17),
            (4,1,18),(4,1,19);
CREATE VIEW
			
create temp table gstest2 (a integer, b integer, c integer, d integer,
                           e integer, f integer, g integer, h integer);
CREATE TABLE
copy gstest2 from stdin;
COPY 9
create temp table gstest3 (a integer, b integer, c integer, d integer);
CREATE TABLE
copy gstest3 from stdin;
COPY 2
alter table gstest3 add primary key (a);
ALTER TABLE
create temp table gstest4(id integer, v integer,
                          unhashable_col bit(4), unsortable_col xid);
CREATE TABLE
insert into gstest4
values (1,1,b'0000','1'), (2,2,b'0001','1'),
       (3,4,b'0010','2'), (4,8,b'0011','2'),
       (5,16,b'0000','2'), (6,32,b'0001','2'),
       (7,64,b'0010','1'), (8,128,b'0011','1');
INSERT 0 8
	   
create temp table gstest_empty (a integer, b integer, v integer);
CREATE TABLE
create function gstest_data(v integer, out a integer, out b integer)
  returns setof record
  as $f$
    begin
      return query select v, i from generate_series(1,3) i;
    end;
  $f$ language plpgsql;
CREATE FUNCTION
-- basic functionality
set enable_hashagg = false;  -- test hashing explicitly later
SET
-- simple rollup with multiple plain aggregates, with and without ordering
-- (and with ordering differing from grouping)
select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b);
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 | 1 |        0 |  21 |     2 |  11
 1 | 2 |        0 |  25 |     2 |  13
 1 | 3 |        0 |  14 |     1 |  14
 1 |   |        1 |  60 |     5 |  14
 2 | 3 |        0 |  15 |     1 |  15
 2 |   |        1 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 3 | 4 |        0 |  17 |     1 |  17
 3 |   |        1 |  33 |     2 |  17
 4 | 1 |        0 |  37 |     2 |  19
 4 |   |        1 |  37 |     2 |  19
   |   |        3 | 145 |    10 |  19
(12 rows)

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b) order by a,b;
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 | 1 |        0 |  21 |     2 |  11
 1 | 2 |        0 |  25 |     2 |  13
 1 | 3 |        0 |  14 |     1 |  14
 1 |   |        1 |  60 |     5 |  14
 2 | 3 |        0 |  15 |     1 |  15
 2 |   |        1 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 3 | 4 |        0 |  17 |     1 |  17
 3 |   |        1 |  33 |     2 |  17
 4 | 1 |        0 |  37 |     2 |  19
 4 |   |        1 |  37 |     2 |  19
   |   |        3 | 145 |    10 |  19
(12 rows)

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b) order by b desc, a;
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 |   |        1 |  60 |     5 |  14
 2 |   |        1 |  15 |     1 |  15
 3 |   |        1 |  33 |     2 |  17
 4 |   |        1 |  37 |     2 |  19
   |   |        3 | 145 |    10 |  19
 3 | 4 |        0 |  17 |     1 |  17
 1 | 3 |        0 |  14 |     1 |  14
 2 | 3 |        0 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 1 | 2 |        0 |  25 |     2 |  13
 1 | 1 |        0 |  21 |     2 |  11
 4 | 1 |        0 |  37 |     2 |  19
(12 rows)

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by rollup (a,b) order by coalesce(a,0)+coalesce(b,0);
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
   |   |        3 | 145 |    10 |  19
 1 |   |        1 |  60 |     5 |  14
 1 | 1 |        0 |  21 |     2 |  11
 2 |   |        1 |  15 |     1 |  15
 3 |   |        1 |  33 |     2 |  17
 1 | 2 |        0 |  25 |     2 |  13
 1 | 3 |        0 |  14 |     1 |  14
 4 |   |        1 |  37 |     2 |  19
 4 | 1 |        0 |  37 |     2 |  19
 2 | 3 |        0 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 3 | 4 |        0 |  17 |     1 |  17
(12 rows)

-- various types of ordered aggs
select a, b, grouping(a,b),
       array_agg(v order by v),
       string_agg(v::text, ':' order by v desc),
       percentile_disc(0.5) within group (order by v),
       rank(1,2,12) within group (order by a,b,v)
  from gstest1 group by rollup (a,b) order by a,b;
 a | b | grouping |            array_agg            |          string_agg           | percentile_disc | rank 
---+---+----------+---------------------------------+-------------------------------+-----------------+------
 1 | 1 |        0 | {10,11}                         | 11:10                         |              10 |    3
 1 | 2 |        0 | {12,13}                         | 13:12                         |              12 |    1
 1 | 3 |        0 | {14}                            | 14                            |              14 |    1
 1 |   |        1 | {10,11,12,13,14}                | 14:13:12:11:10                |              12 |    3
 2 | 3 |        0 | {15}                            | 15                            |              15 |    1
 2 |   |        1 | {15}                            | 15                            |              15 |    1
 3 | 3 |        0 | {16}                            | 16                            |              16 |    1
 3 | 4 |        0 | {17}                            | 17                            |              17 |    1
 3 |   |        1 | {16,17}                         | 17:16                         |              16 |    1
 4 | 1 |        0 | {18,19}                         | 19:18                         |              18 |    1
 4 |   |        1 | {18,19}                         | 19:18                         |              18 |    1
   |   |        3 | {10,11,12,13,14,15,16,17,18,19} | 19:18:17:16:15:14:13:12:11:10 |              14 |    3
(12 rows)

-- test usage of grouped columns in direct args of aggs
select grouping(a), a, array_agg(b),
       rank(a) within group (order by b nulls first),
       rank(a) within group (order by b nulls last)
  from (values (1,1),(1,4),(1,5),(3,1),(3,2)) v(a,b)
 group by rollup (a) order by a;
 grouping | a |  array_agg  | rank | rank 
----------+---+-------------+------+------
        0 | 1 | {1,4,5}     |    1 |    1
        0 | 3 | {1,2}       |    3 |    3
        1 |   | {1,4,5,1,2} |    1 |    6
(3 rows)

-- nesting with window functions
select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
  from gstest2 group by rollup (a,b) order by rsum, a, b;
 a | b | sum | rsum 
---+---+-----+------
 1 | 1 |   8 |    8
 1 | 2 |   2 |   10
 1 |   |  10 |   20
 2 | 2 |   2 |   22
 2 |   |   2 |   24
   |   |  12 |   36
(6 rows)

-- nesting with grouping sets
select sum(c) from gstest2
  group by grouping sets((), grouping sets((), grouping sets(())))
  order by 1 desc;
 sum 
-----
  12
  12
  12
(3 rows)

select sum(c) from gstest2
  group by grouping sets((), grouping sets((), grouping sets(((a, b)))))
  order by 1 desc;
 sum 
-----
  12
  12
   8
   2
   2
(5 rows)

select sum(c) from gstest2
  group by grouping sets(grouping sets(rollup(c), grouping sets(cube(c))))
  order by 1 desc;
 sum 
-----
  12
  12
   6
   6
   6
   6
(6 rows)

select sum(c) from gstest2
  group by grouping sets(a, grouping sets(a, cube(b)))
  order by 1 desc;
 sum 
-----
  12
  10
  10
   8
   4
   2
   2
(7 rows)

select sum(c) from gstest2
  group by grouping sets(grouping sets((a, (b))))
  order by 1 desc;
 sum 
-----
   8
   2
   2
(3 rows)

select sum(c) from gstest2
  group by grouping sets(grouping sets((a, b)))
  order by 1 desc;
 sum 
-----
   8
   2
   2
(3 rows)

select sum(c) from gstest2
  group by grouping sets(grouping sets(a, grouping sets(a), a))
  order by 1 desc;
 sum 
-----
  10
  10
  10
   2
   2
   2
(6 rows)

select sum(c) from gstest2
  group by grouping sets(grouping sets(a, grouping sets(a, grouping sets(a), ((a)), a, grouping sets(a), (a)), a))
  order by 1 desc;
 sum 
-----
  10
  10
  10
  10
  10
  10
  10
  10
   2
   2
   2
   2
   2
   2
   2
   2
(16 rows)

select sum(c) from gstest2
  group by grouping sets((a,(a,b)), grouping sets((a,(a,b)),a))
  order by 1 desc;
 sum 
-----
  10
   8
   8
   2
   2
   2
   2
   2
(8 rows)

-- empty input: first is 0 rows, second 1, third 3 etc.
select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),a);
 a | b | sum | count 
---+---+-----+-------
(0 rows)

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),());
 a | b | sum | count 
---+---+-----+-------
   |   |     |     0
(1 row)

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),(),(),());
 a | b | sum | count 
---+---+-----+-------
   |   |     |     0
   |   |     |     0
   |   |     |     0
(3 rows)

select sum(v), count(*) from gstest_empty group by grouping sets ((),(),());
 sum | count 
-----+-------
     |     0
     |     0
     |     0
(3 rows)

-- empty input with joins tests some important code paths
select t1.a, t2.b, sum(t1.v), count(*) from gstest_empty t1, gstest_empty t2
 group by grouping sets ((t1.a,t2.b),());
 a | b | sum | count 
---+---+-----+-------
   |   |     |     0
(1 row)

-- simple joins, var resolution, GROUPING on join vars
select t1.a, t2.b, grouping(t1.a, t2.b), sum(t1.v), max(t2.a)
  from gstest1 t1, gstest2 t2
 group by grouping sets ((t1.a, t2.b), ());
 a | b | grouping | sum  | max 
---+---+----------+------+-----
 1 | 1 |        0 |  420 |   1
 1 | 2 |        0 |  120 |   2
 2 | 1 |        0 |  105 |   1
 2 | 2 |        0 |   30 |   2
 3 | 1 |        0 |  231 |   1
 3 | 2 |        0 |   66 |   2
 4 | 1 |        0 |  259 |   1
 4 | 2 |        0 |   74 |   2
   |   |        3 | 1305 |   2
(9 rows)

select t1.a, t2.b, grouping(t1.a, t2.b), sum(t1.v), max(t2.a)
  from gstest1 t1 join gstest2 t2 on (t1.a=t2.a)
 group by grouping sets ((t1.a, t2.b), ());
 a | b | grouping | sum | max 
---+---+----------+-----+-----
 1 | 1 |        0 | 420 |   1
 1 | 2 |        0 |  60 |   1
 2 | 2 |        0 |  15 |   2
   |   |        3 | 495 |   2
(4 rows)

select a, b, grouping(a, b), sum(t1.v), max(t2.c)
  from gstest1 t1 join gstest2 t2 using (a,b)
 group by grouping sets ((a, b), ());
 a | b | grouping | sum | max 
---+---+----------+-----+-----
 1 | 1 |        0 | 147 |   2
 1 | 2 |        0 |  25 |   2
   |   |        3 | 172 |   2
(3 rows)

-- check that functionally dependent cols are not nulled
select a, d, grouping(a,b,c)
  from gstest3
 group by grouping sets ((a,b), (a,c));
 a | d | grouping 
---+---+----------
 1 | 1 |        1
 2 | 2 |        1
 1 | 1 |        2
 2 | 2 |        2
(4 rows)

-- check that distinct grouping columns are kept separate
-- even if they are equal()
explain (costs off)
select g as alias1, g as alias2
  from generate_series(1,3) g
 group by alias1, rollup(alias2);

select g as alias1, g as alias2
  from generate_series(1,3) g
 group by alias1, rollup(alias2);
 alias1 | alias2 
--------+--------
      1 |      1
      1 |       
      2 |      2
      2 |       
      3 |      3
      3 |       
(6 rows)

-- check that pulled-up subquery outputs still go to null when appropriate
select four, x
  from (select four, ten, 'foo'::text as x from tenk1) as t
  group by grouping sets (four, x)
  having x = 'foo';
 four | x 
------+---
(0 rows)

select four, x || 'x'
  from (select four, ten, 'foo'::text as x from tenk1) as t
  group by grouping sets (four, x)
  order by four;
 four | ?column? 
------+----------
(0 rows)

select (x+y)*1, sum(z)
 from (select 1 as x, 2 as y, 3 as z) s
 group by grouping sets (x+y, x);
 ?column? | sum 
----------+-----
        3 |   3
          |   3
(2 rows)

select x, not x as not_x, q2 from
  (select *, q1 = 1 as x from int8_tbl i1) as t
  group by grouping sets(x, q2)
  order by x, q2;
 x | not_x |        q2         
---+-------+-------------------
 f | t     |                  
   |       | -4567890123456789
   |       |               123
   |       |               456
   |       |  4567890123456789
(5 rows)

-- simple rescan tests
select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by rollup (a,b);
 a | b | sum 
---+---+-----
 1 | 1 |   1
 1 | 2 |   1
 1 | 3 |   1
 1 |   |   3
 2 | 1 |   2
 2 | 2 |   2
 2 | 3 |   2
 2 |   |   6
   |   |   9
(9 rows)

select *
  from (values (1),(2)) v(x),
       lateral (select a, b, sum(v.x) from gstest_data(v.x) group by rollup (a,b)) s;
psql:sql/groupingsets.sql:186: ERROR:  aggregate functions are not allowed in FROM clause of their own query level
LINE 3:        lateral (select a, b, sum(v.x) from gstest_data(v.x) ...
                                     ^
-- min max optimization should still work with GROUP BY ()
explain (costs off)
  select min(unique1) from tenk1 GROUP BY ();

-- Views with GROUPING SET queries
CREATE VIEW gstest_view AS select a, b, grouping(a,b), sum(c), count(*), max(c)
  from gstest2 group by rollup ((a,b,c),(c,d))
select pg_get_viewdef('gstest_view'::regclass, true);
psql:sql/groupingsets.sql:196: ERROR:  syntax error at or near "select"
LINE 3: select pg_get_viewdef('gstest_view'::regclass, true);
        ^
-- Nested queries with 3 or more levels of nesting
select(select (select grouping(a,b) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP(e,f);
 grouping 
----------
        0
        0
        0
(3 rows)

select(select (select grouping(e,f) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP(e,f);
 grouping 
----------
        0
        1
        3
(3 rows)

select(select (select grouping(c) from (values (1)) v2(c) GROUP BY c) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP(e,f);
 grouping 
----------
        0
        0
        0
(3 rows)

-- Combinations of operations
select a, b, c, d from gstest2 group by rollup(a,b),grouping sets(c,d);
 a | b | c | d 
---+---+---+---
 1 | 1 | 1 |  
 1 |   | 1 |  
   |   | 1 |  
 1 | 1 | 2 |  
 1 | 2 | 2 |  
 1 |   | 2 |  
 2 | 2 | 2 |  
 2 |   | 2 |  
   |   | 2 |  
 1 | 1 |   | 1
 1 |   |   | 1
   |   |   | 1
 1 | 1 |   | 2
 1 | 2 |   | 2
 1 |   |   | 2
 2 | 2 |   | 2
 2 |   |   | 2
   |   |   | 2
(18 rows)

select a, b from (values (1,2),(2,3)) v(a,b) group by a,b, grouping sets(a);
 a | b 
---+---
 1 | 2
 2 | 3
(2 rows)

-- Tests for chained aggregates
select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a,b),(a+1,b+1),(a+2,b+2)) order by 3,6;
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 | 1 |        0 |  21 |     2 |  11
 1 | 2 |        0 |  25 |     2 |  13
 1 | 3 |        0 |  14 |     1 |  14
 2 | 3 |        0 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 3 | 4 |        0 |  17 |     1 |  17
 4 | 1 |        0 |  37 |     2 |  19
   |   |        3 |  21 |     2 |  11
   |   |        3 |  21 |     2 |  11
   |   |        3 |  25 |     2 |  13
   |   |        3 |  25 |     2 |  13
   |   |        3 |  14 |     1 |  14
   |   |        3 |  14 |     1 |  14
   |   |        3 |  15 |     1 |  15
   |   |        3 |  15 |     1 |  15
   |   |        3 |  16 |     1 |  16
   |   |        3 |  16 |     1 |  16
   |   |        3 |  17 |     1 |  17
   |   |        3 |  17 |     1 |  17
   |   |        3 |  37 |     2 |  19
   |   |        3 |  37 |     2 |  19
(21 rows)

select(select (select grouping(a,b) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY ROLLUP((e+1),(f+1));
 grouping 
----------
        0
        0
        0
(3 rows)

select(select (select grouping(a,b) from (values (1)) v2(c)) from (values (1,2)) v1(a,b) group by (a,b)) from (values(6,7)) v3(e,f) GROUP BY CUBE((e+1),(f+1)) ORDER BY (e+1),(f+1);
 grouping 
----------
        0
        0
        0
        0
(4 rows)

select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
  from gstest2 group by cube (a,b) order by rsum, a, b;
 a | b | sum | rsum 
---+---+-----+------
 1 | 1 |   8 |    8
 1 | 2 |   2 |   10
 1 |   |  10 |   20
 2 | 2 |   2 |   22
 2 |   |   2 |   24
   | 1 |   8 |   32
   | 2 |   4 |   36
   |   |  12 |   48
(8 rows)

select a, b, sum(c) from (values (1,1,10),(1,1,11),(1,2,12),(1,2,13),(1,3,14),(2,3,15),(3,3,16),(3,4,17),(4,1,18),(4,1,19)) v(a,b,c) group by rollup (a,b);
 a | b | sum 
---+---+-----
 1 | 1 |  21
 1 | 2 |  25
 1 | 3 |  14
 1 |   |  60
 2 | 3 |  15
 2 |   |  15
 3 | 3 |  16
 3 | 4 |  17
 3 |   |  33
 4 | 1 |  37
 4 |   |  37
   |   | 145
(12 rows)

select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by cube (a,b) order by a,b;
 a | b | sum 
---+---+-----
 1 | 1 |   1
 1 | 2 |   1
 1 | 3 |   1
 1 |   |   3
 2 | 1 |   2
 2 | 2 |   2
 2 | 3 |   2
 2 |   |   6
   | 1 |   3
   | 2 |   3
   | 3 |   3
   |   |   9
(12 rows)

-- Test reordering of grouping sets
explain (costs off)
select * from gstest1 group by grouping sets((a,b,v),(v)) order by v,b,a;

-- Agg level check. This query should error out.
select (select grouping(a,b) from gstest2) from gstest2 group by a,b;
psql:sql/groupingsets.sql:224: ERROR:  arguments to GROUPING must be grouping expressions of the associated query level
LINE 1: select (select grouping(a,b) from gstest2) from gstest2 grou...
                                ^
--Nested queries
select a, b, sum(c), count(*) from gstest2 group by grouping sets (rollup(a,b),a);
 a | b | sum | count 
---+---+-----+-------
 1 | 1 |   8 |     7
 1 | 2 |   2 |     1
 1 |   |  10 |     8
 1 |   |  10 |     8
 2 | 2 |   2 |     1
 2 |   |   2 |     1
 2 |   |   2 |     1
   |   |  12 |     9
(8 rows)

-- HAVING queries
select ten, sum(distinct four) from onek a
group by grouping sets((ten,four),(ten))
having exists (select 1 from onek b where sum(distinct a.four) = b.four);
 ten | sum 
-----+-----
(0 rows)

-- Tests around pushdown of HAVING clauses, partially testing against previous bugs
select a,count(*) from gstest2 group by rollup(a) order by a;
 a | count 
---+-------
 1 |     8
 2 |     1
   |     9
(3 rows)

select a,count(*) from gstest2 group by rollup(a) having a is distinct from 1 order by a;
 a | count 
---+-------
 2 |     1
   |     9
(2 rows)

explain (costs off)
  select a,count(*) from gstest2 group by rollup(a) having a is distinct from 1 order by a;

select v.c, (select count(*) from gstest2 group by () having v.c)
  from (values (false),(true)) v(c) order by v.c;
 c | count 
---+-------
 f |      
 t |     9
(2 rows)

explain (costs off)
  select v.c, (select count(*) from gstest2 group by () having v.c)
    from (values (false),(true)) v(c) order by v.c;

-- HAVING with GROUPING queries
select ten, grouping(ten) from onek
group by grouping sets(ten) having grouping(ten) >= 0
order by 2,1;
 ten | grouping 
-----+----------
(0 rows)

select ten, grouping(ten) from onek
group by grouping sets(ten, four) having grouping(ten) > 0
order by 2,1;
 ten | grouping 
-----+----------
(0 rows)

select ten, grouping(ten) from onek
group by rollup(ten) having grouping(ten) > 0
order by 2,1;
 ten | grouping 
-----+----------
     |        1
(1 row)

select ten, grouping(ten) from onek
group by cube(ten) having grouping(ten) > 0
order by 2,1;
 ten | grouping 
-----+----------
     |        1
(1 row)

select ten, grouping(ten) from onek
group by (ten) having grouping(ten) >= 0
order by 2,1;
 ten | grouping 
-----+----------
(0 rows)

-- FILTER queries
select ten, sum(distinct four) filter (where four::text ~ '123') from onek a
group by rollup(ten);
 ten | sum 
-----+-----
     |    
(1 row)

-- More rescan tests
select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by cube(four,ten)) s on true order by v.a,four,ten;
psql:sql/groupingsets.sql:268: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
 a | a | four | ten | count 
---+---+------+-----+-------
 1 | 1 |      |     |     0
 2 | 2 |      |     |     0
(2 rows)

select array(select row(v.a,s1.*) from (select two,four, count(*) from onek group by cube(two,four) order by two,four) s1) from (values (1),(2)) v(a);
psql:sql/groupingsets.sql:269: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
    array    
-------------
 {"(1,,,0)"}
 {"(2,,,0)"}
(2 rows)

-- Grouping on text columns
select sum(ten) from onek group by two, rollup(four::text) order by 1;
 sum 
-----
(0 rows)

select sum(ten) from onek group by rollup(four::text), two order by 1;
 sum 
-----
(0 rows)

-- hashing support
set enable_hashagg = true;
SET
-- failure cases
select count(*) from gstest4 group by rollup(unhashable_col,unsortable_col);
psql:sql/groupingsets.sql:281: ERROR:  could not implement GROUP BY
DETAIL:  Some of the datatypes only support hashing, while others only support sorting.
select array_agg(v order by v) from gstest4 group by grouping sets ((id,unsortable_col),(id));
psql:sql/groupingsets.sql:282: ERROR:  could not implement GROUP BY
DETAIL:  Some of the datatypes only support hashing, while others only support sorting.
-- simple cases
select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a),(b)) order by 3,1,2;
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 |   |        1 |  60 |     5 |  14
 2 |   |        1 |  15 |     1 |  15
 3 |   |        1 |  33 |     2 |  17
 4 |   |        1 |  37 |     2 |  19
   | 1 |        2 |  58 |     4 |  19
   | 2 |        2 |  25 |     2 |  13
   | 3 |        2 |  45 |     3 |  16
   | 4 |        2 |  17 |     1 |  17
(8 rows)

explain (costs off) select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a),(b)) order by 3,1,2;

select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by cube(a,b) order by 3,1,2;
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 | 1 |        0 |  21 |     2 |  11
 1 | 2 |        0 |  25 |     2 |  13
 1 | 3 |        0 |  14 |     1 |  14
 2 | 3 |        0 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 3 | 4 |        0 |  17 |     1 |  17
 4 | 1 |        0 |  37 |     2 |  19
 1 |   |        1 |  60 |     5 |  14
 2 |   |        1 |  15 |     1 |  15
 3 |   |        1 |  33 |     2 |  17
 4 |   |        1 |  37 |     2 |  19
   | 1 |        2 |  58 |     4 |  19
   | 2 |        2 |  25 |     2 |  13
   | 3 |        2 |  45 |     3 |  16
   | 4 |        2 |  17 |     1 |  17
   |   |        3 | 145 |    10 |  19
(16 rows)

explain (costs off) select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by cube(a,b) order by 3,1,2;

-- shouldn't try and hash
explain (costs off)
  select a, b, grouping(a,b), array_agg(v order by v)
    from gstest1 group by cube(a,b);

-- unsortable cases
select unsortable_col, count(*)
  from gstest4 group by grouping sets ((unsortable_col),(unsortable_col))
  order by unsortable_col::text;
 unsortable_col | count 
----------------+-------
              1 |     4
              1 |     4
              2 |     4
              2 |     4
(4 rows)

-- mixed hashable/sortable cases
select unhashable_col, unsortable_col,
       grouping(unhashable_col, unsortable_col),
       count(*), sum(v)
  from gstest4 group by grouping sets ((unhashable_col),(unsortable_col))
 order by 3, 5;
 unhashable_col | unsortable_col | grouping | count | sum 
----------------+----------------+----------+-------+-----
 0000           |                |        1 |     2 |  17
 0001           |                |        1 |     2 |  34
 0010           |                |        1 |     2 |  68
 0011           |                |        1 |     2 | 136
                |              2 |        2 |     4 |  60
                |              1 |        2 |     4 | 195
(6 rows)

explain (costs off)
  select unhashable_col, unsortable_col,
         grouping(unhashable_col, unsortable_col),
         count(*), sum(v)
    from gstest4 group by grouping sets ((unhashable_col),(unsortable_col))
   order by 3,5;

select unhashable_col, unsortable_col,
       grouping(unhashable_col, unsortable_col),
       count(*), sum(v)
  from gstest4 group by grouping sets ((v,unhashable_col),(v,unsortable_col))
 order by 3,5;
 unhashable_col | unsortable_col | grouping | count | sum 
----------------+----------------+----------+-------+-----
 0000           |                |        1 |     1 |   1
 0001           |                |        1 |     1 |   2
 0010           |                |        1 |     1 |   4
 0011           |                |        1 |     1 |   8
 0000           |                |        1 |     1 |  16
 0001           |                |        1 |     1 |  32
 0010           |                |        1 |     1 |  64
 0011           |                |        1 |     1 | 128
                |              1 |        2 |     1 |   1
                |              1 |        2 |     1 |   2
                |              2 |        2 |     1 |   4
                |              2 |        2 |     1 |   8
                |              2 |        2 |     1 |  16
                |              2 |        2 |     1 |  32
                |              1 |        2 |     1 |  64
                |              1 |        2 |     1 | 128
(16 rows)

explain (costs off)
  select unhashable_col, unsortable_col,
         grouping(unhashable_col, unsortable_col),
         count(*), sum(v)
    from gstest4 group by grouping sets ((v,unhashable_col),(v,unsortable_col))
   order by 3,5;

-- empty input: first is 0 rows, second 1, third 3 etc.
select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),a);
 a | b | sum | count 
---+---+-----+-------
(0 rows)

explain (costs off)
  select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),a);

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),());
 a | b | sum | count 
---+---+-----+-------
   |   |     |     0
(1 row)

select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),(),(),());
 a | b | sum | count 
---+---+-----+-------
   |   |     |     0
   |   |     |     0
   |   |     |     0
(3 rows)

explain (costs off)
  select a, b, sum(v), count(*) from gstest_empty group by grouping sets ((a,b),(),(),());

select sum(v), count(*) from gstest_empty group by grouping sets ((),(),());
 sum | count 
-----+-------
     |     0
     |     0
     |     0
(3 rows)

explain (costs off)
  select sum(v), count(*) from gstest_empty group by grouping sets ((),(),());

-- check that functionally dependent cols are not nulled
select a, d, grouping(a,b,c)
  from gstest3
 group by grouping sets ((a,b), (a,c));
 a | d | grouping 
---+---+----------
 1 | 1 |        1
 2 | 2 |        1
 1 | 1 |        2
 2 | 2 |        2
(4 rows)

explain (costs off)
  select a, d, grouping(a,b,c)
    from gstest3
   group by grouping sets ((a,b), (a,c));

-- simple rescan tests
select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by grouping sets (a,b)
 order by 1, 2, 3;
 a | b | sum 
---+---+-----
 1 |   |   3
 2 |   |   6
   | 1 |   3
   | 2 |   3
   | 3 |   3
(5 rows)

explain (costs off)
  select a, b, sum(v.x)
    from (values (1),(2)) v(x), gstest_data(v.x)
   group by grouping sets (a,b)
   order by 3, 1, 2;

select *
  from (values (1),(2)) v(x),
       lateral (select a, b, sum(v.x) from gstest_data(v.x) group by grouping sets (a,b)) s;
psql:sql/groupingsets.sql:365: ERROR:  aggregate functions are not allowed in FROM clause of their own query level
LINE 3:        lateral (select a, b, sum(v.x) from gstest_data(v.x) ...
                                     ^
explain (costs off)
  select *
    from (values (1),(2)) v(x),
         lateral (select a, b, sum(v.x) from gstest_data(v.x) group by grouping sets (a,b)) s;
psql:sql/groupingsets.sql:369: ERROR:  aggregate functions are not allowed in FROM clause of their own query level
LINE 4:          lateral (select a, b, sum(v.x) from gstest_data(v.x...
                                       ^
-- Tests for chained aggregates
select a, b, grouping(a,b), sum(v), count(*), max(v)
  from gstest1 group by grouping sets ((a,b),(a+1,b+1),(a+2,b+2)) order by 3,6;
 a | b | grouping | sum | count | max 
---+---+----------+-----+-------+-----
 1 | 1 |        0 |  21 |     2 |  11
 1 | 2 |        0 |  25 |     2 |  13
 1 | 3 |        0 |  14 |     1 |  14
 2 | 3 |        0 |  15 |     1 |  15
 3 | 3 |        0 |  16 |     1 |  16
 3 | 4 |        0 |  17 |     1 |  17
 4 | 1 |        0 |  37 |     2 |  19
   |   |        3 |  21 |     2 |  11
   |   |        3 |  21 |     2 |  11
   |   |        3 |  25 |     2 |  13
   |   |        3 |  25 |     2 |  13
   |   |        3 |  14 |     1 |  14
   |   |        3 |  14 |     1 |  14
   |   |        3 |  15 |     1 |  15
   |   |        3 |  15 |     1 |  15
   |   |        3 |  16 |     1 |  16
   |   |        3 |  16 |     1 |  16
   |   |        3 |  17 |     1 |  17
   |   |        3 |  17 |     1 |  17
   |   |        3 |  37 |     2 |  19
   |   |        3 |  37 |     2 |  19
(21 rows)

explain (costs off)
  select a, b, grouping(a,b), sum(v), count(*), max(v)
    from gstest1 group by grouping sets ((a,b),(a+1,b+1),(a+2,b+2)) order by 3,6;

select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
  from gstest2 group by cube (a,b) order by rsum, a, b;
 a | b | sum | rsum 
---+---+-----+------
 1 | 1 |   8 |    8
 1 | 2 |   2 |   10
 1 |   |  10 |   20
 2 | 2 |   2 |   22
 2 |   |   2 |   24
   | 1 |   8 |   32
   | 2 |   4 |   36
   |   |  12 |   48
(8 rows)

explain (costs off)
  select a, b, sum(c), sum(sum(c)) over (order by a,b) as rsum
    from gstest2 group by cube (a,b) order by rsum, a, b;

select a, b, sum(v.x)
  from (values (1),(2)) v(x), gstest_data(v.x)
 group by cube (a,b) order by a,b;
 a | b | sum 
---+---+-----
 1 | 1 |   1
 1 | 2 |   1
 1 | 3 |   1
 1 |   |   3
 2 | 1 |   2
 2 | 2 |   2
 2 | 3 |   2
 2 |   |   6
   | 1 |   3
   | 2 |   3
   | 3 |   3
   |   |   9
(12 rows)

explain (costs off)
  select a, b, sum(v.x)
    from (values (1),(2)) v(x), gstest_data(v.x)
   group by cube (a,b) order by a,b;

-- More rescan tests
select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by cube(four,ten)) s on true order by v.a,four,ten;
psql:sql/groupingsets.sql:391: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
 a | a | four | ten | count 
---+---+------+-----+-------
 1 | 1 |      |     |     0
 2 | 2 |      |     |     0
(2 rows)

select array(select row(v.a,s1.*) from (select two,four, count(*) from onek group by cube(two,four) order by two,four) s1) from (values (1),(2)) v(a);
psql:sql/groupingsets.sql:392: WARNING:  Rescan is called unexpectedly, so reset node->will_rewind to TRUE
    array    
-------------
 {"(1,,,0)"}
 {"(2,,,0)"}
(2 rows)

-- Rescan logic changes when there are no empty grouping sets, so test
-- that too:
select * from (values (1),(2)) v(a) left join lateral (select v.a, four, ten, count(*) from onek group by grouping sets(four,ten)) s on true order by v.a,four,ten;
 a | a | four | ten | count 
---+---+------+-----+-------
 1 |   |      |     |      
 2 |   |      |     |      
(2 rows)

select array(select row(v.a,s1.*) from (select two,four, count(*) from onek group by grouping sets(two,four) order by two,four) s1) from (values (1),(2)) v(a);
 array 
-------
 {}
 {}
(2 rows)

-- test the knapsack
set enable_indexscan = false;
SET
set work_mem = '64kB';
SET
explain (costs off)
  select unique1,
         count(two), count(four), count(ten),
         count(hundred), count(thousand), count(twothousand),
         count(*)
    from tenk1 group by grouping sets (unique1,twothousand,thousand,hundred,ten,four,two);

explain (costs off)
  select unique1,
         count(two), count(four), count(ten),
         count(hundred), count(thousand), count(twothousand),
         count(*)
    from tenk1 group by grouping sets (unique1,hundred,ten,four,two);

set work_mem = '384kB';
SET
explain (costs off)
  select unique1,
         count(two), count(four), count(ten),
         count(hundred), count(thousand), count(twothousand),
         count(*)
    from tenk1 group by grouping sets (unique1,twothousand,thousand,hundred,ten,four,two);

-- check collation-sensitive matching between grouping expressions
-- (similar to a check for aggregates, but there are additional code
-- paths for GROUPING, so check again here)
select v||'a', case grouping(v||'a') when 1 then 1 else 0 end, count(*)
  from unnest(array[1,1], array['a','b']) u(i,v)
 group by rollup(i, v||'a') order by 1,3;
 ?column? | case | count 
----------+------+-------
 aa       |    0 |     1
 ba       |    0 |     1
          |    1 |     2
          |    1 |     2
(4 rows)

select v||'a', case when grouping(v||'a') = 1 then 1 else 0 end, count(*)
  from unnest(array[1,1], array['a','b']) u(i,v)
 group by rollup(i, v||'a') order by 1,3;
 ?column? | case | count 
----------+------+-------
 aa       |    0 |     1
 ba       |    0 |     1
          |    1 |     2
          |    1 |     2
(4 rows)

-- end
