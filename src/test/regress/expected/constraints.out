--
-- CONSTRAINTS
-- Constraints can be specified with:
--  - DEFAULT clause
--  - CHECK clauses
--  - PRIMARY KEY clauses
--  - UNIQUE clauses
--  - EXCLUDE clauses
--
--
-- DEFAULT syntax
--
DROP TABLE if exists DEFAULT_TBL;
psql:sql/constraints.sql:15: NOTICE:  table "default_tbl" does not exist, skipping
DROP TABLE
CREATE TABLE DEFAULT_TBL (i int DEFAULT 100,
	x text DEFAULT 'vadim', f float8 DEFAULT 123.456);
CREATE TABLE
INSERT INTO DEFAULT_TBL VALUES (1, 'thomas', 57.0613);
INSERT 0 1
INSERT INTO DEFAULT_TBL VALUES (1, 'bruce');
INSERT 0 1
INSERT INTO DEFAULT_TBL (i, f) VALUES (2, 987.654);
INSERT 0 1
INSERT INTO DEFAULT_TBL (x) VALUES ('marc');
INSERT 0 1
INSERT INTO DEFAULT_TBL VALUES (3, null, 1.0);
INSERT 0 1
SELECT '' AS five, * FROM DEFAULT_TBL;
 five |  i  |   x    |    f    
------+-----+--------+---------
      |   1 | thomas | 57.0613
      |   1 | bruce  | 123.456
      |   2 | vadim  | 987.654
      | 100 | marc   | 123.456
      |   3 |        |       1
(5 rows)

drop table if exists DEFAULTEXPR_TBL;
psql:sql/constraints.sql:27: NOTICE:  table "defaultexpr_tbl" does not exist, skipping
DROP TABLE
DROP SEQUENCE if exists DEFAULT_SEQ;
psql:sql/constraints.sql:28: NOTICE:  sequence "default_seq" does not exist, skipping
DROP SEQUENCE
CREATE SEQUENCE DEFAULT_SEQ;
CREATE SEQUENCE
CREATE TABLE DEFAULTEXPR_TBL (i1 int DEFAULT 100 + (200-199) * 2,
	i2 int DEFAULT nextval('default_seq'));
CREATE TABLE
INSERT INTO DEFAULTEXPR_TBL VALUES (-1, -2);
INSERT 0 1
INSERT INTO DEFAULTEXPR_TBL (i1) VALUES (-3);
INSERT 0 1
INSERT INTO DEFAULTEXPR_TBL (i2) VALUES (-4);
INSERT 0 1
INSERT INTO DEFAULTEXPR_TBL (i2) VALUES (NULL);
INSERT 0 1
SELECT '' AS four, * FROM DEFAULTEXPR_TBL;
 four | i1  | i2 
------+-----+----
      |  -1 | -2
      |  -3 |  1
      | 102 | -4
      | 102 |   
(4 rows)

-- syntax errors
--  test for extraneous comma
CREATE TABLE error_tbl (i int DEFAULT (100, ));
psql:sql/constraints.sql:42: ERROR:  syntax error at or near ")"
LINE 1: CREATE TABLE error_tbl (i int DEFAULT (100, ));
                                                    ^
--  this will fail because gram.y uses b_expr not a_expr for defaults,
--  to avoid a shift/reduce conflict that arises from NOT NULL being
--  part of the column definition syntax:
CREATE TABLE error_tbl (b1 bool DEFAULT 1 IN (1, 2));
psql:sql/constraints.sql:46: ERROR:  syntax error at or near "IN"
LINE 1: CREATE TABLE error_tbl (b1 bool DEFAULT 1 IN (1, 2));
                                                  ^
--  this should work, however:
CREATE TABLE error_tbl (b1 bool DEFAULT (1 IN (1, 2)));
CREATE TABLE
DROP TABLE error_tbl;
DROP TABLE
--
-- Primary keys
--
drop table if exists PRIMARY_TBL;
psql:sql/constraints.sql:56: NOTICE:  table "primary_tbl" does not exist, skipping
DROP TABLE
CREATE TABLE PRIMARY_TBL (i int PRIMARY KEY, t varchar(100));
CREATE TABLE
INSERT INTO PRIMARY_TBL VALUES (1, 'one');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (2, 'two');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (1, 'three');
psql:sql/constraints.sql:61: ERROR:  Kunlun-db: MySQL storage node (1, 1) returned error: 1062, Duplicate entry '1' for key 'primary_tbl.PRIMARY'.
INSERT INTO PRIMARY_TBL VALUES (4, 'three');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (5, 'one');
INSERT 0 1
INSERT INTO PRIMARY_TBL (t) VALUES ('six');
psql:sql/constraints.sql:64: ERROR:  null value in column "i" violates not-null constraint
DETAIL:  Failing row contains (null, six).
SELECT '' AS four, * FROM PRIMARY_TBL;
 four | i |   t   
------+---+-------
      | 1 | one
      | 2 | two
      | 4 | three
      | 5 | one
(4 rows)

DROP TABLE PRIMARY_TBL;
DROP TABLE
CREATE TABLE PRIMARY_TBL (i int, t varchar(100),
	PRIMARY KEY(i,t));
CREATE TABLE
INSERT INTO PRIMARY_TBL VALUES (1, 'one');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (2, 'two');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (1, 'three');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (4, 'three');
INSERT 0 1
INSERT INTO PRIMARY_TBL VALUES (5, 'one');
INSERT 0 1
INSERT INTO PRIMARY_TBL (t) VALUES ('six');
psql:sql/constraints.sql:78: ERROR:  null value in column "i" violates not-null constraint
DETAIL:  Failing row contains (null, six).
SELECT '' AS three, * FROM PRIMARY_TBL order by 2,3;
 three | i |   t   
-------+---+-------
       | 1 | one
       | 1 | three
       | 2 | two
       | 4 | three
       | 5 | one
(5 rows)

DROP TABLE PRIMARY_TBL;
DROP TABLE
--
-- Unique keys
--
drop table if exists UNIQUE_TBL;
psql:sql/constraints.sql:88: NOTICE:  table "unique_tbl" does not exist, skipping
DROP TABLE
CREATE TABLE UNIQUE_TBL (i int UNIQUE, t varchar(100));
CREATE TABLE
INSERT INTO UNIQUE_TBL VALUES (1, 'one');
INSERT 0 1
INSERT INTO UNIQUE_TBL VALUES (2, 'two');
INSERT 0 1
INSERT INTO UNIQUE_TBL VALUES (1, 'three');
psql:sql/constraints.sql:93: ERROR:  Kunlun-db: MySQL storage node (1, 1) returned error: 1062, Duplicate entry '1' for key 'unique_tbl.unique_tbl_i_key'.
INSERT INTO UNIQUE_TBL VALUES (4, 'four');
INSERT 0 1
INSERT INTO UNIQUE_TBL VALUES (5, 'one');
INSERT 0 1
INSERT INTO UNIQUE_TBL (t) VALUES ('six');
INSERT 0 1
INSERT INTO UNIQUE_TBL (t) VALUES ('seven');
INSERT 0 1
-- INSERT INTO UNIQUE_TBL VALUES (5, 'five-upsert-insert') ON CONFLICT (i) DO UPDATE SET t = 'five-upsert-update';
-- INSERT INTO UNIQUE_TBL VALUES (6, 'six-upsert-insert') ON CONFLICT (i) DO UPDATE SET t = 'six-upsert-update';
-- should fail
-- INSERT INTO UNIQUE_TBL VALUES (1, 'a'), (2, 'b'), (2, 'b') ON CONFLICT (i) DO UPDATE SET t = 'fails';
SELECT '' AS five, * FROM UNIQUE_TBL;
 five | i |   t   
------+---+-------
      | 1 | one
      | 2 | two
      | 4 | four
      | 5 | one
      |   | six
      |   | seven
(6 rows)

DROP TABLE UNIQUE_TBL;
DROP TABLE
CREATE TABLE UNIQUE_TBL (i int, t varchar(100),
	UNIQUE(i,t));
CREATE TABLE
INSERT INTO UNIQUE_TBL VALUES (1, 'one');
INSERT 0 1
INSERT INTO UNIQUE_TBL VALUES (2, 'two');
INSERT 0 1
INSERT INTO UNIQUE_TBL VALUES (1, 'three');
INSERT 0 1
INSERT INTO UNIQUE_TBL VALUES (1, 'one');
psql:sql/constraints.sql:114: ERROR:  Kunlun-db: MySQL storage node (1, 1) returned error: 1062, Duplicate entry '1-one' for key 'unique_tbl.unique_tbl_i_t_key'.
INSERT INTO UNIQUE_TBL VALUES (5, 'one');
INSERT 0 1
INSERT INTO UNIQUE_TBL (t) VALUES ('six');
INSERT 0 1
--The MySQL storage node supports only NULLS FIRST
SELECT '' AS five, * FROM UNIQUE_TBL order by 2,3 NULLS FIRST;
 five | i |   t   
------+---+-------
      | 1 | one
      | 1 | three
      | 2 | two
      | 5 | one
      |   | six
(5 rows)

DROP TABLE UNIQUE_TBL;
DROP TABLE
