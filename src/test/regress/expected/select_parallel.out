--
-- PARALLEL
--
create function sp_parallel_restricted(int) returns int as
  $$begin return $1; end$$ language plpgsql parallel restricted;
CREATE FUNCTION
-- Serializable isolation would disable parallel query, so explicitly use an
-- arbitrary other level.
begin isolation level repeatable read;
BEGIN
-- encourage use of parallel plans
set parallel_setup_cost=0;
SET
set parallel_tuple_cost=0;
SET
set min_parallel_table_scan_size=0;
SET
set max_parallel_workers_per_gather=4;
SET
-- Parallel Append with partial-subplans
explain (costs off)
  select round(avg(aa)), sum(aa) from a_star;
psql:sql/select_parallel.sql:20: ERROR:  column "aa" does not exist
LINE 2:   select round(avg(aa)), sum(aa) from a_star;
                           ^
HINT:  Perhaps you meant to reference the column "a_star.a".
select round(avg(aa)), sum(aa) from a_star a1;
psql:sql/select_parallel.sql:21: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Parallel Append with both partial and non-partial subplans
alter table c_star set (parallel_workers = 0);
psql:sql/select_parallel.sql:24: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table d_star set (parallel_workers = 0);
psql:sql/select_parallel.sql:25: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
  select round(avg(aa)), sum(aa) from a_star;
psql:sql/select_parallel.sql:27: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select round(avg(aa)), sum(aa) from a_star a2;
psql:sql/select_parallel.sql:28: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Parallel Append with only non-partial subplans
alter table a_star set (parallel_workers = 0);
psql:sql/select_parallel.sql:31: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table b_star set (parallel_workers = 0);
psql:sql/select_parallel.sql:32: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table e_star set (parallel_workers = 0);
psql:sql/select_parallel.sql:33: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table f_star set (parallel_workers = 0);
psql:sql/select_parallel.sql:34: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
  select round(avg(aa)), sum(aa) from a_star;
psql:sql/select_parallel.sql:36: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select round(avg(aa)), sum(aa) from a_star a3;
psql:sql/select_parallel.sql:37: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Disable Parallel Append
alter table a_star reset (parallel_workers);
psql:sql/select_parallel.sql:40: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table b_star reset (parallel_workers);
psql:sql/select_parallel.sql:41: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table c_star reset (parallel_workers);
psql:sql/select_parallel.sql:42: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table d_star reset (parallel_workers);
psql:sql/select_parallel.sql:43: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table e_star reset (parallel_workers);
psql:sql/select_parallel.sql:44: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table f_star reset (parallel_workers);
psql:sql/select_parallel.sql:45: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_parallel_append to off;
psql:sql/select_parallel.sql:46: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
  select round(avg(aa)), sum(aa) from a_star;
psql:sql/select_parallel.sql:48: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select round(avg(aa)), sum(aa) from a_star a4;
psql:sql/select_parallel.sql:49: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_parallel_append;
psql:sql/select_parallel.sql:50: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Parallel Append that runs serially
create function sp_test_func() returns setof text as
$$ select 'foo'::varchar union all select 'bar'::varchar $$
language sql stable;
psql:sql/select_parallel.sql:55: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select sp_test_func() order by 1;
psql:sql/select_parallel.sql:56: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Parallel Append is not to be used when the subpath depends on the outer param
create table part_pa_test(a int, b int) partition by range(a);
psql:sql/select_parallel.sql:59: ERROR:  current transaction is aborted, commands ignored until end of transaction block
create table part_pa_test_p1 partition of part_pa_test for values from (minvalue) to (0);
psql:sql/select_parallel.sql:60: ERROR:  current transaction is aborted, commands ignored until end of transaction block
create table part_pa_test_p2 partition of part_pa_test for values from (0) to (maxvalue);
psql:sql/select_parallel.sql:61: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select (select max((select pa1.b from part_pa_test pa1 where pa1.a = pa2.a)))
	from part_pa_test pa2;
psql:sql/select_parallel.sql:64: ERROR:  current transaction is aborted, commands ignored until end of transaction block
drop table part_pa_test;
psql:sql/select_parallel.sql:65: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test with leader participation disabled
set parallel_leader_participation = off;
psql:sql/select_parallel.sql:68: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
  select count(*) from tenk1 where stringu1 = 'GRAAAA';
psql:sql/select_parallel.sql:70: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1 where stringu1 = 'GRAAAA';
psql:sql/select_parallel.sql:71: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test with leader participation disabled, but no workers available (so
-- the leader will have to run the plan despite the setting)
set max_parallel_workers = 0;
psql:sql/select_parallel.sql:75: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
  select count(*) from tenk1 where stringu1 = 'GRAAAA';
psql:sql/select_parallel.sql:77: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1 where stringu1 = 'GRAAAA';
psql:sql/select_parallel.sql:78: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset max_parallel_workers;
psql:sql/select_parallel.sql:80: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset parallel_leader_participation;
psql:sql/select_parallel.sql:81: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test that parallel_restricted function doesn't run in worker
alter table tenk1 set (parallel_workers = 4);
psql:sql/select_parallel.sql:84: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (verbose, costs off)
select sp_parallel_restricted(unique1) from tenk1
  where stringu1 = 'GRAAAA' order by 1;
psql:sql/select_parallel.sql:87: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel plan when group by expression is in target list.
explain (costs off)
	select length(stringu1) from tenk1 group by length(stringu1);
psql:sql/select_parallel.sql:91: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select length(stringu1) from tenk1 group by length(stringu1);
psql:sql/select_parallel.sql:92: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select stringu1, count(*) from tenk1 group by stringu1 order by stringu1;
psql:sql/select_parallel.sql:95: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test that parallel plan for aggregates is not selected when
-- target list contains parallel restricted clause.
explain (costs off)
	select  sum(sp_parallel_restricted(unique1)) from tenk1
	group by(sp_parallel_restricted(unique1));
psql:sql/select_parallel.sql:101: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test prepared statement
prepare tenk1_count(integer) As select  count((unique1)) from tenk1 where hundred > $1;
psql:sql/select_parallel.sql:104: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off) execute tenk1_count(1);
psql:sql/select_parallel.sql:105: ERROR:  current transaction is aborted, commands ignored until end of transaction block
execute tenk1_count(1);
psql:sql/select_parallel.sql:106: ERROR:  current transaction is aborted, commands ignored until end of transaction block
deallocate tenk1_count;
psql:sql/select_parallel.sql:107: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel plans for queries containing un-correlated subplans.
alter table tenk2 set (parallel_workers = 0);
psql:sql/select_parallel.sql:110: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select count(*) from tenk1 where (two, four) not in
	(select hundred, thousand from tenk2 where thousand > 100);
psql:sql/select_parallel.sql:113: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1 where (two, four) not in
	(select hundred, thousand from tenk2 where thousand > 100);
psql:sql/select_parallel.sql:115: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- this is not parallel-safe due to use of random() within SubLink's testexpr:
explain (costs off)
	select * from tenk1 where (unique1 + random())::integer not in
	(select ten from tenk2);
psql:sql/select_parallel.sql:119: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table tenk2 reset (parallel_workers);
psql:sql/select_parallel.sql:120: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel plan for a query containing initplan.
set enable_indexscan = off;
psql:sql/select_parallel.sql:123: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_indexonlyscan = off;
psql:sql/select_parallel.sql:124: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_bitmapscan = off;
psql:sql/select_parallel.sql:125: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table tenk2 set (parallel_workers = 2);
psql:sql/select_parallel.sql:126: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select count(*) from tenk1
        where tenk1.unique1 = (Select max(tenk2.unique1) from tenk2);
psql:sql/select_parallel.sql:130: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1
    where tenk1.unique1 = (Select max(tenk2.unique1) from tenk2);
psql:sql/select_parallel.sql:132: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_indexscan;
psql:sql/select_parallel.sql:134: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_indexonlyscan;
psql:sql/select_parallel.sql:135: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_bitmapscan;
psql:sql/select_parallel.sql:136: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table tenk2 reset (parallel_workers);
psql:sql/select_parallel.sql:137: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel index scans.
set enable_seqscan to off;
psql:sql/select_parallel.sql:140: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_bitmapscan to off;
psql:sql/select_parallel.sql:141: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select  count((unique1)) from tenk1 where hundred > 1;
psql:sql/select_parallel.sql:144: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select  count((unique1)) from tenk1 where hundred > 1;
psql:sql/select_parallel.sql:145: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel index-only scans.
explain (costs off)
	select  count(*) from tenk1 where thousand > 95;
psql:sql/select_parallel.sql:149: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select  count(*) from tenk1 where thousand > 95;
psql:sql/select_parallel.sql:150: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test rescan cases too
set enable_material = false;
psql:sql/select_parallel.sql:153: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
select * from
  (select count(unique1) from tenk1 where hundred > 10) ss
  right join (values (1),(2),(3)) v(x) on true;
psql:sql/select_parallel.sql:158: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select * from
  (select count(unique1) from tenk1 where hundred > 10) ss
  right join (values (1),(2),(3)) v(x) on true;
psql:sql/select_parallel.sql:161: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
select * from
  (select count(*) from tenk1 where thousand > 99) ss
  right join (values (1),(2),(3)) v(x) on true;
psql:sql/select_parallel.sql:166: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select * from
  (select count(*) from tenk1 where thousand > 99) ss
  right join (values (1),(2),(3)) v(x) on true;
psql:sql/select_parallel.sql:169: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_material;
psql:sql/select_parallel.sql:171: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_seqscan;
psql:sql/select_parallel.sql:172: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_bitmapscan;
psql:sql/select_parallel.sql:173: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel bitmap heap scan.
set enable_seqscan to off;
psql:sql/select_parallel.sql:176: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_indexscan to off;
psql:sql/select_parallel.sql:177: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_hashjoin to off;
psql:sql/select_parallel.sql:178: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_mergejoin to off;
psql:sql/select_parallel.sql:179: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_material to off;
psql:sql/select_parallel.sql:180: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test prefetching, if the platform allows it
DO $$
BEGIN
 SET effective_io_concurrency = 50;
EXCEPTION WHEN invalid_parameter_value THEN
END $$;
psql:sql/select_parallel.sql:186: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set work_mem='64kB';  --set small work mem to force lossy pages
psql:sql/select_parallel.sql:187: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select count(*) from tenk1, tenk2 where tenk1.hundred > 1 and tenk2.thousand=0;
psql:sql/select_parallel.sql:189: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1, tenk2 where tenk1.hundred > 1 and tenk2.thousand=0;
psql:sql/select_parallel.sql:190: ERROR:  current transaction is aborted, commands ignored until end of transaction block
create table bmscantest (a int, t text);
psql:sql/select_parallel.sql:192: ERROR:  current transaction is aborted, commands ignored until end of transaction block
insert into bmscantest select r, 'fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo' FROM generate_series(1,100000) r;
psql:sql/select_parallel.sql:193: ERROR:  current transaction is aborted, commands ignored until end of transaction block
create index i_bmtest ON bmscantest(a);
psql:sql/select_parallel.sql:194: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from bmscantest where a>1;
psql:sql/select_parallel.sql:195: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test accumulation of stats for parallel nodes
reset enable_seqscan;
psql:sql/select_parallel.sql:198: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table tenk2 set (parallel_workers = 0);
psql:sql/select_parallel.sql:199: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (analyze, timing off, summary off, costs off)
   select count(*) from tenk1, tenk2 where tenk1.hundred > 1
        and tenk2.thousand=0;
psql:sql/select_parallel.sql:202: ERROR:  current transaction is aborted, commands ignored until end of transaction block
alter table tenk2 reset (parallel_workers);
psql:sql/select_parallel.sql:203: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset work_mem;
psql:sql/select_parallel.sql:205: ERROR:  current transaction is aborted, commands ignored until end of transaction block
create function explain_parallel_sort_stats() returns setof text
language plpgsql as
$$
declare ln text;
begin
    for ln in
        explain (analyze, timing off, summary off, costs off)
          select * from
          (select ten from tenk1 where ten < 100 order by ten) ss
          right join (values (1),(2),(3)) v(x) on true
    loop
        ln = regexp_replace(ln, 'Memory: \S*',  'Memory: xxx');
        return next ln;
    end loop;
end;
$$;
psql:sql/select_parallel.sql:221: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select * from explain_parallel_sort_stats();
psql:sql/select_parallel.sql:222: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_indexscan;
psql:sql/select_parallel.sql:224: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_hashjoin;
psql:sql/select_parallel.sql:225: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_mergejoin;
psql:sql/select_parallel.sql:226: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_material;
psql:sql/select_parallel.sql:227: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset effective_io_concurrency;
psql:sql/select_parallel.sql:228: ERROR:  current transaction is aborted, commands ignored until end of transaction block
drop table bmscantest;
psql:sql/select_parallel.sql:229: ERROR:  current transaction is aborted, commands ignored until end of transaction block
drop function explain_parallel_sort_stats();
psql:sql/select_parallel.sql:230: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test parallel merge join path.
set enable_hashjoin to off;
psql:sql/select_parallel.sql:233: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set enable_nestloop to off;
psql:sql/select_parallel.sql:234: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
	select  count(*) from tenk1, tenk2 where tenk1.unique1 = tenk2.unique1;
psql:sql/select_parallel.sql:237: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select  count(*) from tenk1, tenk2 where tenk1.unique1 = tenk2.unique1;
psql:sql/select_parallel.sql:238: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_hashjoin;
psql:sql/select_parallel.sql:240: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_nestloop;
psql:sql/select_parallel.sql:241: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test gather merge
set enable_hashagg = false;
psql:sql/select_parallel.sql:244: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
   select count(*) from tenk1 group by twenty;
psql:sql/select_parallel.sql:247: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1 group by twenty;
psql:sql/select_parallel.sql:249: ERROR:  current transaction is aborted, commands ignored until end of transaction block
--test expressions in targetlist are pushed down for gather merge
create function sp_simple_func(var1 integer) returns integer
as $$
begin
        return var1 + 10;
end;
$$ language plpgsql PARALLEL SAFE;
psql:sql/select_parallel.sql:257: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off, verbose)
    select ten, sp_simple_func(ten) from tenk1 where ten < 100 order by ten;
psql:sql/select_parallel.sql:260: ERROR:  current transaction is aborted, commands ignored until end of transaction block
drop function sp_simple_func(integer);
psql:sql/select_parallel.sql:262: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test handling of SRFs in targetlist (bug in 10.0)
explain (costs off)
   select count(*), generate_series(1,2) from tenk1 group by twenty;
psql:sql/select_parallel.sql:267: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*), generate_series(1,2) from tenk1 group by twenty;
psql:sql/select_parallel.sql:269: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test gather merge with parallel leader participation disabled
set parallel_leader_participation = off;
psql:sql/select_parallel.sql:272: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
   select count(*) from tenk1 group by twenty;
psql:sql/select_parallel.sql:275: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1 group by twenty;
psql:sql/select_parallel.sql:277: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset parallel_leader_participation;
psql:sql/select_parallel.sql:279: ERROR:  current transaction is aborted, commands ignored until end of transaction block
--test rescan behavior of gather merge
set enable_material = false;
psql:sql/select_parallel.sql:282: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
select * from
  (select string4, count(unique2)
   from tenk1 group by string4 order by string4) ss
  right join (values (1),(2),(3)) v(x) on true;
psql:sql/select_parallel.sql:288: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select * from
  (select string4, count(unique2)
   from tenk1 group by string4 order by string4) ss
  right join (values (1),(2),(3)) v(x) on true;
psql:sql/select_parallel.sql:293: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_material;
psql:sql/select_parallel.sql:295: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset enable_hashagg;
psql:sql/select_parallel.sql:297: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- check parallelized int8 aggregate (bug #14897)
explain (costs off)
select avg(unique1::int8) from tenk1;
psql:sql/select_parallel.sql:301: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select avg(unique1::int8) from tenk1;
psql:sql/select_parallel.sql:303: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- gather merge test with a LIMIT
explain (costs off)
  select fivethous from tenk1 order by fivethous limit 4;
psql:sql/select_parallel.sql:307: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select fivethous from tenk1 order by fivethous limit 4;
psql:sql/select_parallel.sql:309: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- gather merge test with 0 worker
set max_parallel_workers = 0;
psql:sql/select_parallel.sql:312: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
   select string4 from tenk1 order by string4 limit 5;
psql:sql/select_parallel.sql:314: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select string4 from tenk1 order by string4 limit 5;
psql:sql/select_parallel.sql:315: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- gather merge test with 0 workers, with parallel leader
-- participation disabled (the leader will have to run the plan
-- despite the setting)
set parallel_leader_participation = off;
psql:sql/select_parallel.sql:320: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
   select string4 from tenk1 order by string4 limit 5;
psql:sql/select_parallel.sql:322: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select string4 from tenk1 order by string4 limit 5;
psql:sql/select_parallel.sql:323: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset parallel_leader_participation;
psql:sql/select_parallel.sql:325: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset max_parallel_workers;
psql:sql/select_parallel.sql:326: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SAVEPOINT settings;
psql:sql/select_parallel.sql:328: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SET LOCAL force_parallel_mode = 1;
psql:sql/select_parallel.sql:329: ERROR:  current transaction is aborted, commands ignored until end of transaction block
explain (costs off)
  select stringu1::int2 from tenk1 where unique1 = 1;
psql:sql/select_parallel.sql:331: ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK TO SAVEPOINT settings;
psql:sql/select_parallel.sql:332: ERROR:  savepoint "settings" does not exist
-- exercise record typmod remapping between backends
CREATE FUNCTION make_record(n int)
  RETURNS RECORD LANGUAGE plpgsql PARALLEL SAFE AS
$$
BEGIN
  RETURN CASE n
           WHEN 1 THEN ROW(1)
           WHEN 2 THEN ROW(1, 2)
           WHEN 3 THEN ROW(1, 2, 3)
           WHEN 4 THEN ROW(1, 2, 3, 4)
           ELSE ROW(1, 2, 3, 4, 5)
         END;
END;
$$;
psql:sql/select_parallel.sql:347: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SAVEPOINT settings;
psql:sql/select_parallel.sql:348: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SET LOCAL force_parallel_mode = 1;
psql:sql/select_parallel.sql:349: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SELECT make_record(x) FROM (SELECT generate_series(1, 5) x) ss ORDER BY x;
psql:sql/select_parallel.sql:350: ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK TO SAVEPOINT settings;
psql:sql/select_parallel.sql:351: ERROR:  savepoint "settings" does not exist
DROP function make_record(n int);
psql:sql/select_parallel.sql:352: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test the sanity of parallel query after the active role is dropped.
drop role if exists regress_parallel_worker;
psql:sql/select_parallel.sql:355: ERROR:  current transaction is aborted, commands ignored until end of transaction block
create role regress_parallel_worker;
psql:sql/select_parallel.sql:356: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set role regress_parallel_worker;
psql:sql/select_parallel.sql:357: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset session authorization;
psql:sql/select_parallel.sql:358: ERROR:  current transaction is aborted, commands ignored until end of transaction block
drop role regress_parallel_worker;
psql:sql/select_parallel.sql:359: ERROR:  current transaction is aborted, commands ignored until end of transaction block
set force_parallel_mode = 1;
psql:sql/select_parallel.sql:360: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select count(*) from tenk1;
psql:sql/select_parallel.sql:361: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset force_parallel_mode;
psql:sql/select_parallel.sql:362: ERROR:  current transaction is aborted, commands ignored until end of transaction block
reset role;
psql:sql/select_parallel.sql:363: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- Window function calculation can't be pushed to workers.
explain (costs off, verbose)
  select count(*) from tenk1 a where (unique1, two) in
    (select unique1, row_number() over() from tenk1 b);
psql:sql/select_parallel.sql:368: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- LIMIT/OFFSET within sub-selects can't be pushed to workers.
explain (costs off)
  select * from tenk1 a where two in
    (select two from tenk1 b where stringu1 like '%AAAA' limit 3);
psql:sql/select_parallel.sql:374: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- to increase the parallel query test coverage
SAVEPOINT settings;
psql:sql/select_parallel.sql:377: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SET LOCAL force_parallel_mode = 1;
psql:sql/select_parallel.sql:378: ERROR:  current transaction is aborted, commands ignored until end of transaction block
EXPLAIN (analyze, timing off, summary off, costs off) SELECT * FROM tenk1;
psql:sql/select_parallel.sql:379: ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK TO SAVEPOINT settings;
psql:sql/select_parallel.sql:380: ERROR:  savepoint "settings" does not exist
-- provoke error in worker
SAVEPOINT settings;
psql:sql/select_parallel.sql:383: ERROR:  current transaction is aborted, commands ignored until end of transaction block
SET LOCAL force_parallel_mode = 1;
psql:sql/select_parallel.sql:384: ERROR:  current transaction is aborted, commands ignored until end of transaction block
select stringu1::int2 from tenk1 where unique1 = 1;
psql:sql/select_parallel.sql:385: ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK TO SAVEPOINT settings;
psql:sql/select_parallel.sql:386: ERROR:  savepoint "settings" does not exist
-- test interaction with set-returning functions
SAVEPOINT settings;
psql:sql/select_parallel.sql:389: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- multiple subqueries under a single Gather node
-- must set parallel_setup_cost > 0 to discourage multiple Gather nodes
SET LOCAL parallel_setup_cost = 10;
psql:sql/select_parallel.sql:393: ERROR:  current transaction is aborted, commands ignored until end of transaction block
EXPLAIN (COSTS OFF)
SELECT unique1 FROM tenk1 WHERE fivethous = tenthous + 1
UNION ALL
SELECT unique1 FROM tenk1 WHERE fivethous = tenthous + 1;
psql:sql/select_parallel.sql:397: ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK TO SAVEPOINT settings;
psql:sql/select_parallel.sql:398: ERROR:  savepoint "settings" does not exist
-- can't use multiple subqueries under a single Gather node due to initPlans
EXPLAIN (COSTS OFF)
SELECT unique1 FROM tenk1 WHERE fivethous =
	(SELECT unique1 FROM tenk1 WHERE fivethous = 1 LIMIT 1)
UNION ALL
SELECT unique1 FROM tenk1 WHERE fivethous =
	(SELECT unique2 FROM tenk1 WHERE fivethous = 1 LIMIT 1)
ORDER BY 1;
psql:sql/select_parallel.sql:407: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test interaction with SRFs
SELECT * FROM information_schema.foreign_data_wrapper_options
ORDER BY 1, 2, 3;
psql:sql/select_parallel.sql:411: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test passing expanded-value representations to workers
CREATE FUNCTION make_some_array(int,int) returns int[] as
$$declare x int[];
  begin
    x[1] = $1;
    x[2] = $2;
    return x;
  end$$ language plpgsql parallel safe;
psql:sql/select_parallel.sql:420: ERROR:  current transaction is aborted, commands ignored until end of transaction block
CREATE TABLE fooarr(f1 text, f2 int[], f3 text);
psql:sql/select_parallel.sql:421: ERROR:  current transaction is aborted, commands ignored until end of transaction block
INSERT INTO fooarr VALUES('1', ARRAY[1,2], 'one');
psql:sql/select_parallel.sql:422: ERROR:  current transaction is aborted, commands ignored until end of transaction block
PREPARE pstmt(text, int[]) AS SELECT * FROM fooarr WHERE f1 = $1 AND f2 = $2;
psql:sql/select_parallel.sql:424: ERROR:  current transaction is aborted, commands ignored until end of transaction block
EXPLAIN (COSTS OFF) EXECUTE pstmt('1', make_some_array(1,2));
psql:sql/select_parallel.sql:425: ERROR:  current transaction is aborted, commands ignored until end of transaction block
EXECUTE pstmt('1', make_some_array(1,2));
psql:sql/select_parallel.sql:426: ERROR:  current transaction is aborted, commands ignored until end of transaction block
DEALLOCATE pstmt;
psql:sql/select_parallel.sql:427: ERROR:  current transaction is aborted, commands ignored until end of transaction block
-- test interaction between subquery and partial_paths
SET LOCAL min_parallel_table_scan_size TO 0;
psql:sql/select_parallel.sql:430: ERROR:  current transaction is aborted, commands ignored until end of transaction block
CREATE VIEW tenk1_vw_sec WITH (security_barrier) AS SELECT * FROM tenk1;
psql:sql/select_parallel.sql:431: ERROR:  current transaction is aborted, commands ignored until end of transaction block
EXPLAIN (COSTS OFF)
SELECT 1 FROM tenk1_vw_sec WHERE EXISTS (SELECT 1 WHERE unique1 = 0);
psql:sql/select_parallel.sql:433: ERROR:  current transaction is aborted, commands ignored until end of transaction block
rollback;
ROLLBACK
