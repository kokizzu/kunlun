--
-- ALTER TABLE ADD COLUMN DEFAULT test
--
SET search_path = fast_default;
SET
CREATE SCHEMA fast_default;
CREATE SCHEMA
drop table if exists has_volatile;
psql:sql/fast_default.sql:8: NOTICE:  table "has_volatile" does not exist, skipping
DROP TABLE
CREATE TABLE has_volatile(id int);
CREATE TABLE
insert into has_volatile SELECT * FROM generate_series(1,10) id;
INSERT 0 10
ALTER TABLE has_volatile ADD col1 int;
ALTER TABLE
ALTER TABLE has_volatile ADD col2 int DEFAULT 1;
ALTER TABLE
ALTER TABLE has_volatile ADD col3 timestamptz DEFAULT current_timestamp;
ALTER TABLE
ALTER TABLE has_volatile ADD col4 int DEFAULT (random() * 10000)::int;
ALTER TABLE
-- Test a large sample of different datatypes
drop table if not exists T;
psql:sql/fast_default.sql:19: ERROR:  syntax error at or near "not"
LINE 1: drop table if not exists T;
                      ^
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT 1);
CREATE TABLE
INSERT INTO T VALUES (1), (2);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_bpchar BPCHAR(5) DEFAULT 'hello',
              ALTER COLUMN c_int SET DEFAULT 2;	  
ALTER TABLE
INSERT INTO T VALUES (3), (4);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_text TEXT,
              ALTER COLUMN c_bpchar SET DEFAULT 'dog';	  
ALTER TABLE
INSERT INTO T VALUES (5), (6);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_date DATE DEFAULT '2016-06-02';
ALTER TABLE
--             ALTER COLUMN c_text SET DEFAULT 'cat';
INSERT INTO T VALUES (7), (8);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_timestamp TIMESTAMP DEFAULT '2016-09-01 12:00:00',
              ADD COLUMN c_timestamp_null TIMESTAMP,
              ALTER COLUMN c_date SET DEFAULT '2010-01-01';
ALTER TABLE
INSERT INTO T VALUES (9), (10);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_timestamp SET DEFAULT '1970-12-31 11:12:13',
              ALTER COLUMN c_timestamp_null SET DEFAULT '2016-09-29 12:00:00';
ALTER TABLE
INSERT INTO T VALUES (11), (12);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_small SMALLINT DEFAULT -5,
              ADD COLUMN c_small_null SMALLINT;
ALTER TABLE
INSERT INTO T VALUES (13), (14);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_big BIGINT DEFAULT 180000000000018,
              ALTER COLUMN c_small SET DEFAULT 9,
              ALTER COLUMN c_small_null SET DEFAULT 13;
ALTER TABLE
INSERT INTO T VALUES (15), (16);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_num NUMERIC(10,10) DEFAULT 1.00000000001,
              ALTER COLUMN c_big SET DEFAULT -9999999999999999;
psql:sql/fast_default.sql:62: ERROR:  numeric field overflow
DETAIL:  A field with precision 10, scale 10 must round to an absolute value less than 1.
INSERT INTO T VALUES (17), (18);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_time TIME DEFAULT '12:00:00',
              ALTER COLUMN c_num SET DEFAULT 2.000000000000002;
psql:sql/fast_default.sql:67: ERROR:  column "c_num" of relation "t" does not exist
INSERT INTO T VALUES (19), (20);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_time SET DEFAULT '23:59:59';
psql:sql/fast_default.sql:71: ERROR:  column "c_time" of relation "t" does not exist
INSERT INTO T VALUES (21), (22);
INSERT 0 2
INSERT INTO T VALUES (23), (24);
INSERT 0 2
INSERT INTO T VALUES (25), (26);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_bpchar    DROP DEFAULT,
              ALTER COLUMN c_date      DROP DEFAULT,
              ALTER COLUMN c_text      DROP DEFAULT,
              ALTER COLUMN c_timestamp DROP DEFAULT,
              ALTER COLUMN c_small     DROP DEFAULT,
              ALTER COLUMN c_big       DROP DEFAULT,
              ALTER COLUMN c_num       DROP DEFAULT,
              ALTER COLUMN c_time      DROP DEFAULT;
psql:sql/fast_default.sql:86: ERROR:  column "c_num" of relation "t" does not exist
INSERT INTO T VALUES (27), (28);
INSERT 0 2
SELECT pk, c_int, c_bpchar, c_text, c_date, c_timestamp,
       c_timestamp_null, c_small, c_small_null,
       c_big, c_num, c_time
FROM T ORDER BY pk;
psql:sql/fast_default.sql:93: ERROR:  column "c_num" does not exist
LINE 3:        c_big, c_num, c_time
                      ^
DROP TABLE T;
DROP TABLE
-- Test expressions in the defaults
CREATE OR REPLACE FUNCTION foo(a INT) RETURNS TEXT AS $$
DECLARE res TEXT = '';
        i INT;
BEGIN
  i = 0;
  WHILE (i < a) LOOP
    res = res || chr(ascii('a') + i);
    i = i + 1;
  END LOOP;
  RETURN res;
END; $$ LANGUAGE PLPGSQL STABLE;
CREATE FUNCTION
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY, c_int INT DEFAULT LENGTH(foo(6)));
CREATE TABLE
INSERT INTO T VALUES (1), (2);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_bpchar BPCHAR(5) DEFAULT foo(4),
              ALTER COLUMN c_int SET DEFAULT LENGTH(foo(8));
ALTER TABLE
INSERT INTO T VALUES (3), (4);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_text TEXT  DEFAULT foo(6),
              ALTER COLUMN c_bpchar SET DEFAULT foo(3);
psql:sql/fast_default.sql:120: ERROR:  Kunlun-db: MySQL storage node (1, 1) returned error: 1101, BLOB, TEXT, GEOMETRY or JSON column 'c_text' can't have a default value.
INSERT INTO T VALUES (5), (6);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_date DATE
                  DEFAULT '2016-06-02'::DATE  + LENGTH(foo(10)),
              ALTER COLUMN c_text SET DEFAULT foo(12);
psql:sql/fast_default.sql:126: ERROR:  column "c_text" of relation "t" does not exist
INSERT INTO T VALUES (7), (8);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_timestamp TIMESTAMP
                  DEFAULT '2016-09-01'::DATE + LENGTH(foo(10)),
              ALTER COLUMN c_date
                  SET DEFAULT '2010-01-01'::DATE - LENGTH(foo(4));
psql:sql/fast_default.sql:133: ERROR:  column "c_date" of relation "t" does not exist
INSERT INTO T VALUES (9), (10);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_timestamp
                  SET DEFAULT '1970-12-31'::DATE + LENGTH(foo(30));
psql:sql/fast_default.sql:138: ERROR:  column "c_timestamp" of relation "t" does not exist
INSERT INTO T VALUES (11), (12);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_int DROP DEFAULT;
ALTER TABLE
INSERT INTO T VALUES (13), (14);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_bpchar    DROP DEFAULT,
              ALTER COLUMN c_date      DROP DEFAULT,
              ALTER COLUMN c_text      DROP DEFAULT,
              ALTER COLUMN c_timestamp DROP DEFAULT;
psql:sql/fast_default.sql:149: ERROR:  column "c_date" of relation "t" does not exist
INSERT INTO T VALUES (15), (16);
INSERT 0 2
SELECT * FROM T;
 pk | c_int | c_bpchar 
----+-------+----------
  1 |     6 | abcd 
  2 |     6 | abcd 
  3 |     8 | abcd 
  4 |     8 | abcd 
  5 |     8 | abcd 
  6 |     8 | abcd 
  7 |     8 | abcd 
  8 |     8 | abcd 
  9 |     8 | abcd 
 10 |     8 | abcd 
 11 |     8 | abcd 
 12 |     8 | abcd 
 13 |       | abcd 
 14 |       | abcd 
 15 |       | abcd 
 16 |       | abcd 
(16 rows)

DROP TABLE T;
DROP TABLE
DROP FUNCTION foo(INT);
DROP FUNCTION
-- Fall back to full rewrite for volatile expressions
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY);
CREATE TABLE
INSERT INTO T VALUES (1);
INSERT 0 1
-- now() is stable, because it returns the transaction timestamp
ALTER TABLE T ADD COLUMN c1 TIMESTAMP DEFAULT now();
ALTER TABLE
-- clock_timestamp() is volatile
ALTER TABLE T ADD COLUMN c2 TIMESTAMP DEFAULT clock_timestamp();
ALTER TABLE
DROP TABLE T;
DROP TABLE
-- Simple querie
CREATE TABLE T (pk INT NOT NULL PRIMARY KEY);
CREATE TABLE
INSERT INTO T SELECT * FROM generate_series(1, 10) a;
INSERT 0 10
ALTER TABLE T ADD COLUMN c_bigint BIGINT NOT NULL DEFAULT -1;
ALTER TABLE
INSERT INTO T SELECT b, b - 10 FROM generate_series(11, 20) a(b);
INSERT 0 10
ALTER TABLE T ADD COLUMN c_text TEXT DEFAULT 'hello';
psql:sql/fast_default.sql:181: ERROR:  Kunlun-db: MySQL storage node (1, 1) returned error: 1101, BLOB, TEXT, GEOMETRY or JSON column 'c_text' can't have a default value.
INSERT INTO T SELECT b, b - 10, (b + 10)::text FROM generate_series(21, 30) a(b);
psql:sql/fast_default.sql:183: ERROR:  INSERT has more expressions than target columns
LINE 1: INSERT INTO T SELECT b, b - 10, (b + 10)::text FROM generate...
                                         ^
-- WHERE clause
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1;
psql:sql/fast_default.sql:186: ERROR:  column "c_text" does not exist
LINE 1: SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1;
                         ^
EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1;
psql:sql/fast_default.sql:189: ERROR:  column "c_text" does not exist
LINE 2: SELECT c_bigint, c_text FROM T WHERE c_bigint = -1 LIMIT 1;
                         ^
SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1;
psql:sql/fast_default.sql:191: ERROR:  column "c_text" does not exist
LINE 1: SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT ...
                         ^
EXPLAIN (VERBOSE TRUE, COSTS FALSE) SELECT c_bigint, c_text FROM T WHERE c_text = 'hello' LIMIT 1;
psql:sql/fast_default.sql:193: ERROR:  column "c_text" does not exist
LINE 1: ...LAIN (VERBOSE TRUE, COSTS FALSE) SELECT c_bigint, c_text FRO...
                                                             ^
-- COALESCE
SELECT COALESCE(c_bigint, pk), COALESCE(c_text, pk::text)
FROM T
ORDER BY pk LIMIT 10;
psql:sql/fast_default.sql:199: ERROR:  column "c_text" does not exist
LINE 1: SELECT COALESCE(c_bigint, pk), COALESCE(c_text, pk::text)
                                                ^
-- Aggregate function
SELECT SUM(c_bigint), MAX(c_text COLLATE "C" ), MIN(c_text COLLATE "C") FROM T;
psql:sql/fast_default.sql:202: ERROR:  column "c_text" does not exist
LINE 1: SELECT SUM(c_bigint), MAX(c_text COLLATE "C" ), MIN(c_text C...
                                  ^
-- ORDER BY
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10;
psql:sql/fast_default.sql:205: ERROR:  column "c_text" does not exist
LINE 1: SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10;
                                           ^
EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10;
psql:sql/fast_default.sql:208: ERROR:  column "c_text" does not exist
LINE 2: SELECT * FROM T ORDER BY c_bigint, c_text, pk LIMIT 10;
                                           ^
-- LIMIT
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10;
psql:sql/fast_default.sql:211: ERROR:  column "c_text" does not exist
LINE 1: ...T * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk...
                                                             ^
EXPLAIN (VERBOSE TRUE, COSTS FALSE)
SELECT * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk LIMIT 10;
psql:sql/fast_default.sql:214: ERROR:  column "c_text" does not exist
LINE 2: ...T * FROM T WHERE c_bigint > -1 ORDER BY c_bigint, c_text, pk...
                                                             ^
--  DELETE with RETURNING
DELETE FROM T WHERE pk BETWEEN 10 AND 20 RETURNING *;
 pk | c_bigint 
----+----------
 10 |       -1
 11 |        1
 12 |        2
 13 |        3
 14 |        4
 15 |        5
 16 |        6
 17 |        7
 18 |        8
 19 |        9
 20 |       10
(11 rows)

DELETE 4294967295
-- will crash: EXPLAIN (VERBOSE TRUE, COSTS FALSE)
-- DELETE FROM T WHERE pk BETWEEN 10 AND 20 RETURNING *;
-- UPDATE
UPDATE T SET c_text = '"' || c_text || '"'  WHERE pk < 10;
psql:sql/fast_default.sql:222: ERROR:  column "c_text" does not exist
LINE 1: UPDATE T SET c_text = '"' || c_text || '"'  WHERE pk < 10;
                                     ^
SELECT * FROM T WHERE c_text LIKE '"%"' ORDER BY PK;
psql:sql/fast_default.sql:223: ERROR:  column "c_text" does not exist
LINE 1: SELECT * FROM T WHERE c_text LIKE '"%"' ORDER BY PK;
                              ^
DROP TABLE T;
DROP TABLE
-- Combine with other DDL
CREATE TABLE T(pk INT NOT NULL PRIMARY KEY);
CREATE TABLE
INSERT INTO T VALUES (1), (2);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_int INT NOT NULL DEFAULT -1;
ALTER TABLE
INSERT INTO T VALUES (3), (4);
INSERT 0 2
ALTER TABLE T ADD COLUMN c_text TEXT DEFAULT 'Hello';
psql:sql/fast_default.sql:237: ERROR:  Kunlun-db: MySQL storage node (2, 2) returned error: 1101, BLOB, TEXT, GEOMETRY or JSON column 'c_text' can't have a default value.
INSERT INTO T VALUES (5), (6);
INSERT 0 2
ALTER TABLE T ALTER COLUMN c_text SET DEFAULT 'world',
              ALTER COLUMN c_int  SET DEFAULT 1;
psql:sql/fast_default.sql:242: ERROR:  column "c_text" of relation "t" does not exist
INSERT INTO T VALUES (7), (8);
INSERT 0 2
SELECT * FROM T ORDER BY pk;
 pk | c_int 
----+-------
  1 |    -1
  2 |    -1
  3 |    -1
  4 |    -1
  5 |    -1
  6 |    -1
  7 |    -1
  8 |    -1
(8 rows)

-- Add an index
CREATE INDEX i ON T(c_int, c_text);
psql:sql/fast_default.sql:249: ERROR:  column "c_text" does not exist
SELECT c_text FROM T WHERE c_int = -1;
psql:sql/fast_default.sql:251: ERROR:  column "c_text" does not exist
LINE 1: SELECT c_text FROM T WHERE c_int = -1;
               ^
HINT:  Perhaps you meant to reference the column "t.c_int".
DROP TABLE T;
DROP TABLE
-- 2 new columns, both have defaults
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,3);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 | 4 | 5
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 | 4 | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- 2 new columns, first has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,3);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 | 4 |  
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 | 4 | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- 2 new columns, second has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,3);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 |   | 5
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 |   | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- 2 new columns, neither has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,3);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 |   |  
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 | 3 |   | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- same as last 4 tests but here the last original column has a NULL value
-- 2 new columns, both have defaults
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,NULL);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   | 4 | 5
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   | 4 | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- 2 new columns, first has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,NULL);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int NOT NULL DEFAULT 4;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   | 4 |  
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   | 4 | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- 2 new columns, second has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,NULL);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int NOT NULL DEFAULT 5;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   |   | 5
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   |   | 2
(1 row)

DROP TABLE t;
DROP TABLE
-- 2 new columns, neither has default
CREATE TABLE t (id serial PRIMARY KEY, a int, b int, c int);
CREATE TABLE
INSERT INTO t (a,b,c) VALUES (1,2,NULL);
INSERT 0 1
ALTER TABLE t ADD COLUMN x int;
ALTER TABLE
ALTER TABLE t ADD COLUMN y int;
ALTER TABLE
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   |   |  
(1 row)

UPDATE t SET y = 2;
UPDATE 1
SELECT * FROM t;
 id | a | b | c | x | y 
----+---+---+---+---+---
  1 | 1 | 2 |   |   | 2
(1 row)

DROP TABLE t;
DROP TABLE
CREATE TABLE leader (a int PRIMARY KEY, b int);
CREATE TABLE
CREATE TABLE follower (a int, b int);
CREATE TABLE
INSERT INTO leader VALUES (1, 1), (2, 2);
INSERT 0 2
ALTER TABLE leader ADD c int;
ALTER TABLE
ALTER TABLE leader DROP c;
ALTER TABLE
DELETE FROM leader;
DELETE 2
-- check that ALTER TABLE ... ALTER TYPE does the right thing
CREATE TABLE vtype( a integer);
CREATE TABLE
INSERT INTO vtype VALUES (1);
INSERT 0 1
ALTER TABLE vtype ADD COLUMN b DOUBLE PRECISION DEFAULT 0.2;
ALTER TABLE
ALTER TABLE vtype ADD COLUMN c BOOLEAN DEFAULT true;
ALTER TABLE
SELECT * FROM vtype;
 a |  b  | c 
---+-----+---
 1 | 0.2 | t
(1 row)

ALTER TABLE vtype
      ALTER b TYPE text USING b::text,
      ALTER c TYPE text USING c::text;
ALTER TABLE
SELECT * FROM vtype;
 a |  b  | c 
---+-----+---
 1 | 0.2 | 1
(1 row)

-- also check the case that doesn't rewrite the table
CREATE TABLE vtype2 (a int);
CREATE TABLE
INSERT INTO vtype2 VALUES (1);
INSERT 0 1
ALTER TABLE vtype2 ADD COLUMN b varchar(10) DEFAULT 'xxx';
ALTER TABLE
ALTER TABLE vtype2 ALTER COLUMN b SET DEFAULT 'yyy';
ALTER TABLE
INSERT INTO vtype2 VALUES (2);
INSERT 0 1
ALTER TABLE vtype2 ALTER COLUMN b TYPE varchar(20) USING b::varchar(20);
ALTER TABLE
SELECT * FROM vtype2;
 a |  b  
---+-----
 1 | xxx
 2 | yyy
(2 rows)

-- cleanup
DROP TABLE vtype;
DROP TABLE
DROP TABLE vtype2;
DROP TABLE
DROP TABLE follower;
DROP TABLE
DROP TABLE leader;
DROP TABLE
DROP TABLE t1;
psql:sql/fast_default.sql:371: ERROR:  table "t1" does not exist
DROP TABLE has_volatile;
DROP TABLE
DROP FUNCTION log_rewrite;
psql:sql/fast_default.sql:373: ERROR:  could not find a function named "log_rewrite"
DROP SCHEMA fast_default;
DROP SCHEMA
-- Leave a table with an active fast default in place, for pg_upgrade testing
set search_path = public;
SET
create table has_fast_default(f1 int);
CREATE TABLE
insert into has_fast_default values(1);
INSERT 0 1
alter table has_fast_default add column f2 int default 42;
ALTER TABLE
table has_fast_default;
 f1 | f2 
----+----
  1 | 42
(1 row)

drop table has_fast_default;
DROP TABLE
