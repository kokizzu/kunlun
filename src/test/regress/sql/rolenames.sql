--DDL_STATEMENT_BEGIN--
CREATE OR REPLACE FUNCTION chkrolattr()
 RETURNS TABLE ("role" name, rolekeyword text, canlogin bool, replication bool)
 AS $$
SELECT r.rolname, v.keyword, r.rolcanlogin, r.rolreplication
 FROM pg_roles r
 JOIN (VALUES(CURRENT_USER, 'current_user'),
             (SESSION_USER, 'session_user'),
             ('current_user', '-'),
             ('session_user', '-'),
             ('Public', '-'),
             ('None', '-'))
      AS v(uname, keyword)
      ON (r.rolname = v.uname)
 ORDER BY 1;
$$ LANGUAGE SQL;
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE OR REPLACE FUNCTION chksetconfig()
 RETURNS TABLE (db name, "role" name, rolkeyword text, setconfig text[])
 AS $$
SELECT COALESCE(d.datname, 'ALL'), COALESCE(r.rolname, 'ALL'),
	   COALESCE(v.keyword, '-'), s.setconfig
 FROM pg_db_role_setting s
 LEFT JOIN pg_roles r ON (r.oid = s.setrole)
 LEFT JOIN pg_database d ON (d.oid = s.setdatabase)
 LEFT JOIN (VALUES(CURRENT_USER, 'current_user'),
             (SESSION_USER, 'session_user'))
      AS v(uname, keyword)
      ON (r.rolname = v.uname)
   WHERE (r.rolname) IN ('Public', 'current_user', 'regress_testrol1', 'regress_testrol2')
ORDER BY 1, 2;
$$ LANGUAGE SQL;
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE OR REPLACE FUNCTION chkumapping()
 RETURNS TABLE (umname name, umserver name, umoptions text[])
 AS $$
SELECT r.rolname, s.srvname, m.umoptions
 FROM pg_user_mapping m
 LEFT JOIN pg_roles r ON (r.oid = m.umuser)
 JOIN pg_foreign_server s ON (s.oid = m.umserver)
 ORDER BY 2;
$$ LANGUAGE SQL;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "Public";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "None";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "session_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "user";
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE ROLE current_user; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE current_role; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE session_user; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE user; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE all; -- error
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE ROLE public; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "public"; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE none; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "none"; -- error
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE ROLE pg_abc; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "pg_abc"; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE pg_abcdef; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE "pg_abcdef"; -- error
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE ROLE regress_testrol0 SUPERUSER LOGIN;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE regress_testrolx SUPERUSER LOGIN;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE regress_testrol2 SUPERUSER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE ROLE regress_testrol1 SUPERUSER LOGIN IN ROLE regress_testrol2;
--DDL_STATEMENT_END--

\c -
SET SESSION AUTHORIZATION regress_testrol1;
SET ROLE regress_testrol2;

--  ALTER ROLE
BEGIN;
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER ROLE CURRENT_USER WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER ROLE "current_user" WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER ROLE SESSION_USER WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER ROLE "session_user" WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER "Public" WITH REPLICATION;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "None" WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER regress_testrol1 WITH NOREPLICATION;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER regress_testrol2 WITH NOREPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
ROLLBACK;

--DDL_STATEMENT_BEGIN--
ALTER ROLE USER WITH LOGIN; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE CURRENT_ROLE WITH LOGIN; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE ALL WITH REPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE SESSION_ROLE WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE PUBLIC WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE "public" WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE NONE WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE "none" WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE nonexistent WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--

--  ALTER USER
BEGIN;
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER CURRENT_USER WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER "current_user" WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER SESSION_USER WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER "session_user" WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER "Public" WITH REPLICATION;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "None" WITH REPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
--DDL_STATEMENT_BEGIN--
ALTER USER regress_testrol1 WITH NOREPLICATION;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER regress_testrol2 WITH NOREPLICATION;
--DDL_STATEMENT_END--
SELECT * FROM chkrolattr();
ROLLBACK;

--DDL_STATEMENT_BEGIN--
ALTER USER USER WITH LOGIN; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER CURRENT_ROLE WITH LOGIN; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER ALL WITH REPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER SESSION_ROLE WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER PUBLIC WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "public" WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER NONE WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "none" WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER nonexistent WITH NOREPLICATION; -- error
--DDL_STATEMENT_END--

--  ALTER ROLE SET/RESET
SELECT * FROM chksetconfig();
--DDL_STATEMENT_BEGIN--
ALTER ROLE CURRENT_USER SET application_name to 'FOO';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE SESSION_USER SET application_name to 'BAR';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE "current_user" SET application_name to 'FOOFOO';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE "Public" SET application_name to 'BARBAR';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE ALL SET application_name to 'SLAP';
--DDL_STATEMENT_END--
SELECT * FROM chksetconfig();
--DDL_STATEMENT_BEGIN--
ALTER ROLE regress_testrol1 SET application_name to 'SLAM';
--DDL_STATEMENT_END--
SELECT * FROM chksetconfig();
--DDL_STATEMENT_BEGIN--
ALTER ROLE CURRENT_USER RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE SESSION_USER RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE "current_user" RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE "Public" RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE ALL RESET application_name;
--DDL_STATEMENT_END--
SELECT * FROM chksetconfig();


--DDL_STATEMENT_BEGIN--
ALTER ROLE CURRENT_ROLE SET application_name to 'BAZ'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE USER SET application_name to 'BOOM'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE PUBLIC SET application_name to 'BOMB'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER ROLE nonexistent SET application_name to 'BOMB'; -- error
--DDL_STATEMENT_END--

--  ALTER USER SET/RESET
SELECT * FROM chksetconfig();
--DDL_STATEMENT_BEGIN--
ALTER USER CURRENT_USER SET application_name to 'FOO';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER SESSION_USER SET application_name to 'BAR';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "current_user" SET application_name to 'FOOFOO';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "Public" SET application_name to 'BARBAR';
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER ALL SET application_name to 'SLAP';
--DDL_STATEMENT_END--
SELECT * FROM chksetconfig();
--DDL_STATEMENT_BEGIN--
ALTER USER regress_testrol1 SET application_name to 'SLAM';
--DDL_STATEMENT_END--
SELECT * FROM chksetconfig();
--DDL_STATEMENT_BEGIN--
ALTER USER CURRENT_USER RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER SESSION_USER RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "current_user" RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER "Public" RESET application_name;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER ALL RESET application_name;
--DDL_STATEMENT_END--
SELECT * FROM chksetconfig();


--DDL_STATEMENT_BEGIN--
ALTER USER CURRENT_USER SET application_name to 'BAZ'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER USER SET application_name to 'BOOM'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER PUBLIC SET application_name to 'BOMB'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER NONE SET application_name to 'BOMB'; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER nonexistent SET application_name to 'BOMB'; -- error
--DDL_STATEMENT_END--

-- CREATE SCHEMA
set client_min_messages to error;
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema1 AUTHORIZATION CURRENT_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema2 AUTHORIZATION "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema3 AUTHORIZATION SESSION_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema4 AUTHORIZATION regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema5 AUTHORIZATION "Public";
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema6 AUTHORIZATION USER; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema6 AUTHORIZATION CURRENT_ROLE; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema6 AUTHORIZATION PUBLIC; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema6 AUTHORIZATION "public"; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema6 AUTHORIZATION NONE; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA newschema6 AUTHORIZATION nonexistent; -- error
--DDL_STATEMENT_END--

SELECT n.nspname, r.rolname FROM pg_namespace n
 JOIN pg_roles r ON (r.oid = n.nspowner)
 WHERE n.nspname LIKE 'newschema_' ORDER BY 1;
 
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema1 AUTHORIZATION CURRENT_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema2 AUTHORIZATION "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema3 AUTHORIZATION SESSION_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema4 AUTHORIZATION regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema5 AUTHORIZATION "Public";
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema6 AUTHORIZATION USER; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema6 AUTHORIZATION CURRENT_ROLE; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema6 AUTHORIZATION PUBLIC; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema6 AUTHORIZATION "public"; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema6 AUTHORIZATION NONE; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA IF NOT EXISTS newschema6 AUTHORIZATION nonexistent; -- error
--DDL_STATEMENT_END--

SELECT n.nspname, r.rolname FROM pg_namespace n
 JOIN pg_roles r ON (r.oid = n.nspowner)
 WHERE n.nspname LIKE 'newschema_' ORDER BY 1;

-- ALTER TABLE OWNER TO
\c -
SET SESSION AUTHORIZATION regress_testrol0;
set client_min_messages to error;
--DDL_STATEMENT_BEGIN--
CREATE TABLE testtab1 (a int);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE TABLE testtab2 (a int);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE TABLE testtab3 (a int);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE TABLE testtab4 (a int);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE TABLE testtab5 (a int);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE TABLE testtab6 (a int);
--DDL_STATEMENT_END--

\c -
SET SESSION AUTHORIZATION regress_testrol1;
SET ROLE regress_testrol2;

--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab1 OWNER TO CURRENT_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab2 OWNER TO "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab3 OWNER TO SESSION_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab4 OWNER TO regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab5 OWNER TO "Public";
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab6 OWNER TO CURRENT_ROLE; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab6 OWNER TO USER; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab6 OWNER TO PUBLIC; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab6 OWNER TO "public"; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER TABLE testtab6 OWNER TO nonexistent; -- error
--DDL_STATEMENT_END--

SELECT c.relname, r.rolname
 FROM pg_class c JOIN pg_roles r ON (r.oid = c.relowner)
 WHERE relname LIKE 'testtab_'
 ORDER BY 1;

-- ALTER TABLE, VIEW, MATERIALIZED VIEW, FOREIGN TABLE, SEQUENCE are
-- changed their owner in the same way.

-- ALTER AGGREGATE
\c -
SET SESSION AUTHORIZATION regress_testrol0;
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg1(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg2(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg3(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg4(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg5(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg5(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg6(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg7(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg8(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE AGGREGATE testagg9(int2) (SFUNC = int2_sum, STYPE = int8);
--DDL_STATEMENT_END--

\c -
SET SESSION AUTHORIZATION regress_testrol1;
SET ROLE regress_testrol2;

--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg1(int2) OWNER TO CURRENT_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--	
ALTER AGGREGATE testagg2(int2) OWNER TO "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg3(int2) OWNER TO SESSION_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg4(int2) OWNER TO regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg5(int2) OWNER TO "Public";
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg5(int2) OWNER TO CURRENT_ROLE; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg5(int2) OWNER TO USER; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg5(int2) OWNER TO PUBLIC; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg5(int2) OWNER TO "public"; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER AGGREGATE testagg5(int2) OWNER TO nonexistent; -- error
--DDL_STATEMENT_END--

SELECT p.proname, r.rolname
 FROM pg_proc p JOIN pg_roles r ON (r.oid = p.proowner)
 WHERE proname LIKE 'testagg_'
 ORDER BY 1;

-- CREATE USER MAPPING
--DDL_STATEMENT_BEGIN--
CREATE FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv1 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv2 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv3 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv4 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv5 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv6 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv7 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv8 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE SERVER sv9 FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR CURRENT_USER SERVER sv1 OPTIONS (user 'CURRENT_USER');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR "current_user" SERVER sv2 OPTIONS (user '"current_user"');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR USER SERVER sv3 OPTIONS (user 'USER');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR "user" SERVER sv4 OPTIONS (user '"USER"');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR SESSION_USER SERVER sv5 OPTIONS (user 'SESSION_USER');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR PUBLIC SERVER sv6 OPTIONS (user 'PUBLIC');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR "Public" SERVER sv7 OPTIONS (user '"Public"');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR regress_testrolx SERVER sv8 OPTIONS (user 'regress_testrolx');
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR CURRENT_ROLE SERVER sv9
	    OPTIONS (user 'CURRENT_ROLE'); -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR nonexistent SERVER sv9
	    OPTIONS (user 'nonexistent'); -- error;
--DDL_STATEMENT_END--

SELECT * FROM chkumapping();

-- ALTER USER MAPPING
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR CURRENT_USER SERVER sv1
 OPTIONS (SET user 'CURRENT_USER_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR "current_user" SERVER sv2
 OPTIONS (SET user '"current_user"_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR USER SERVER sv3
 OPTIONS (SET user 'USER_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR "user" SERVER sv4
 OPTIONS (SET user '"user"_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR SESSION_USER SERVER sv5
 OPTIONS (SET user 'SESSION_USER_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR PUBLIC SERVER sv6
 OPTIONS (SET user 'public_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR "Public" SERVER sv7
 OPTIONS (SET user '"Public"_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR regress_testrolx SERVER sv8
 OPTIONS (SET user 'regress_testrolx_alt');
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR CURRENT_ROLE SERVER sv9
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
 OPTIONS (SET user 'CURRENT_ROLE_alt');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
ALTER USER MAPPING FOR nonexistent SERVER sv9
 OPTIONS (SET user 'nonexistent_alt'); -- error
--DDL_STATEMENT_END--

SELECT * FROM chkumapping();

-- DROP USER MAPPING
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR CURRENT_USER SERVER sv1;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR "current_user" SERVER sv2;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR USER SERVER sv3;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR "user" SERVER sv4;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR SESSION_USER SERVER sv5;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR PUBLIC SERVER sv6;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR "Public" SERVER sv7;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR regress_testrolx SERVER sv8;
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR CURRENT_ROLE SERVER sv9; -- error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING FOR nonexistent SERVER sv;  -- error
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();

--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR CURRENT_USER SERVER sv1 OPTIONS (user 'CURRENT_USER');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR "current_user" SERVER sv2 OPTIONS (user '"current_user"');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR USER SERVER sv3 OPTIONS (user 'USER');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR "user" SERVER sv4 OPTIONS (user '"USER"');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR SESSION_USER SERVER sv5 OPTIONS (user 'SESSION_USER');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR PUBLIC SERVER sv6 OPTIONS (user 'PUBLIC');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR "Public" SERVER sv7 OPTIONS (user '"Public"');
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
CREATE USER MAPPING FOR regress_testrolx SERVER sv8 OPTIONS (user 'regress_testrolx');
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();

-- DROP USER MAPPING IF EXISTS
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR CURRENT_USER SERVER sv1;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR "current_user" SERVER sv2;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR USER SERVER sv3;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR "user" SERVER sv4;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR SESSION_USER SERVER sv5;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR PUBLIC SERVER sv6;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR "Public" SERVER sv7;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR regress_testrolx SERVER sv8;
--DDL_STATEMENT_END--
SELECT * FROM chkumapping();

--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR CURRENT_ROLE SERVER sv9; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP USER MAPPING IF EXISTS FOR nonexistent SERVER sv9;  -- error
--DDL_STATEMENT_END--

-- GRANT/REVOKE
--DDL_STATEMENT_BEGIN--
GRANT regress_testrol0 TO pg_signal_backend; -- success
--DDL_STATEMENT_END--

SET ROLE pg_signal_backend; --success
RESET ROLE;
--DDL_STATEMENT_BEGIN--
CREATE SCHEMA test_roles_schema AUTHORIZATION pg_signal_backend; --success
--DDL_STATEMENT_END--
SET ROLE regress_testrol2;

UPDATE pg_proc SET proacl = null WHERE proname LIKE 'testagg_';
SELECT proname, proacl FROM pg_proc WHERE proname LIKE 'testagg_';

--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg1(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg2(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg3(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg4(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg5(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg6(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg7(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg8(int2) FROM PUBLIC;
--DDL_STATEMENT_END--

--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg1(int2) TO PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg2(int2) TO CURRENT_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg3(int2) TO "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg4(int2) TO SESSION_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg5(int2) TO "Public";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg6(int2) TO regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg7(int2) TO "public";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg8(int2)
	   TO current_user, public, regress_testrolx;
--DDL_STATEMENT_END--

SELECT proname, proacl FROM pg_proc WHERE proname LIKE 'testagg_';

--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg9(int2) TO CURRENT_ROLE; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg9(int2) TO USER; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg9(int2) TO NONE; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
GRANT ALL PRIVILEGES ON FUNCTION testagg9(int2) TO "none"; --error
--DDL_STATEMENT_END--


SELECT proname, proacl FROM pg_proc WHERE proname LIKE 'testagg_';
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg1(int2) FROM PUBLIC;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg2(int2) FROM CURRENT_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg3(int2) FROM "current_user";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg4(int2) FROM SESSION_USER;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg5(int2) FROM "Public";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg6(int2) FROM regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg7(int2) FROM "public";
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg8(int2)
	   FROM current_user, public, regress_testrolx;
--DDL_STATEMENT_END--

SELECT proname, proacl FROM pg_proc WHERE proname LIKE 'testagg_';

--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg9(int2) FROM CURRENT_ROLE; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg9(int2) FROM USER; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg9(int2) FROM NONE; --error
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
REVOKE ALL PRIVILEGES ON FUNCTION testagg9(int2) FROM "none"; --error
--DDL_STATEMENT_END--

SELECT proname, proacl FROM pg_proc WHERE proname LIKE 'testagg_';

-- clean up
\c

--DDL_STATEMENT_BEGIN--
DROP SCHEMA test_roles_schema;
--DDL_STATEMENT_END--
--DROP OWNED BY regress_testrol0, "Public", "current_user", regress_testrol1, regress_testrol2, regress_testrolx CASCADE;
--DDL_STATEMENT_BEGIN--
DROP SCHEMA newschema1;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SCHEMA newschema2;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SCHEMA newschema3;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SCHEMA newschema4;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SCHEMA newschema5;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP TABLE testtab1;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP TABLE testtab2;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP TABLE testtab3;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP TABLE testtab4;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP TABLE testtab5;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP TABLE testtab6;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg1(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg2(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg3(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg4(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg5(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg6(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg7(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg8(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP AGGREGATE testagg9(int2);
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv1;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv2;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv3;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv4;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv5;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv6;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv7;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv8;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP SERVER sv9;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP FOREIGN DATA WRAPPER test_wrapper;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP ROLE regress_testrol0, regress_testrol1, regress_testrol2, regress_testrolx;
--DDL_STATEMENT_END--
--DDL_STATEMENT_BEGIN--
DROP ROLE "Public", "None", "current_user", "session_user", "user";
--DDL_STATEMENT_END--